{"version":3,"sources":["webpack:///static/js/app.96e6f8da5fb6905004d0.js","webpack:///./src/main.js","webpack:///./src/components/nav.vue","webpack:///App.vue","webpack:///ButtonView.vue","webpack:///Hello.vue","webpack:///nav.vue","webpack:///./src/assets/logo.png","webpack:///./src/App.vue?d818","webpack:///./src/components/Hello.vue?5490","webpack:///./src/components/ButtonView.vue?ab50","webpack:///./src/components/nav.vue?5a9f","webpack:///./src/App.vue","webpack:///./src/components/ButtonView.vue","webpack:///./src/components/Hello.vue","webpack:///./~/vue-router/dist/vue-router.js"],"names":["webpackJsonp","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_App","_App2","_vueRouter","_vueRouter2","_nav","_Hello","_Hello2","_ButtonView","_ButtonView2","use","router","map","/","component","/button","redirect","*","start","__vue_script__","__vue_template__","options","template","Object","defineProperty","value","_nav2","components","pagenav","data","msg","navMsg","category","cates","name","url","p","global","factory","this","Target","path","matcher","delegate","Matcher","target","routes","children","generateMatch","startingPath","nestedCallback","fullPath","addRoute","routeArray","handler","len","i","l","length","substr","route","push","eachRoute","baseRoute","callback","binding","hasOwnProperty","slice","call","addRouteCallback","add","warn","noWarning","console","error","tryDecode","uri","asComponent","decodeURIComponent","decodeURI","e","isArray","test","prototype","toString","StaticSegment","string","DynamicSegment","StarSegment","EpsilonSegment","parse","names","specificity","charAt","segments","split","results","val","match","segment","State","charSpec","nextStates","sortSolutions","states","sort","a","b","recognizeChar","ch","state","concat","RecognizeResults","queryParams","findHandler","handlers","regex","captures","currentCapture","result","params","j","m","isDynamic","addSegment","currentState","eachChar","put","decodeQueryParamPart","part","replace","warn$1","resolvePath","base","relative","append","query","stack","pop","unshift","join","isPromise","then","getRouteConfig","$options","resolveAsyncComponent","cb","resolver","_","resolve","exports$1","Vue","_resolveComponent","Component","mapParams","undefined","key","JSON","stringify","genQuery","canReuse","view","transition","childVM","canReuseFn","to","from","canDeactivate","next","fromComponent","hook","callHook","expectBoolean","canActivate","aborted","deactivate","callHooks","activate","depth","reuse","activateQueue","saveChildView","_bound","setComponent","activateHook","dataHook","waitForData","activated","loading","constructor","$loadingRouteData","unbuild","build","_meta","created","_routerView","keepAlive","cachedChildView","_keepAliveRouterView","childView","cleanup","$destroy","insert","_rendered","_transitionOnLoad","setCurrent","$before","anchor","afterData","afterActivate","loadData","postActivate","$emit","processData","promises","isPlainObject","keys","forEach","resolvedVal","$set","all","isPlainOjbect","toArray","Array","applyOverride","_Vue$util","util","extend","defineReactive","init","_init","root","_parent","parent","$router","$route","_children","_defineMeta","destroy","_destroy","_isBeingDestroyed","$remove","apply","arguments","strats","config","optionMergeStrategies","hooksToMergeRE","parentVal","childVal","ret","View","componentDef","directive","internalDirectives","viewDef","_isRouterView","bind","vm","_isDynamicLiteral","parentView","$parent","_rootView","_currentTransition","done","unbind","elementDirective","Link","sameOrigin","link","protocol","location","hostname","port","toggleClasses","el","fn","trim","indexOf","_bind","isObject","addClass","removeClass","onPriority","priority","LINK_UPDATE","activeId","_this","id","String","childLinks","querySelectorAll","existingId","getAttribute","setAttribute","$on","activeIds","updateClasses","$off","unwatch","$watch","onRouteUpdate","removeAttribute","tagName","onClick","addEventListener","update","exact","prevActiveClass","activeClass","metaKey","ctrlKey","shiftKey","defaultPrevented","button","preventDefault","go","parentNode","pathname","history","rootRE","newPath","stringifyPath","updateActiveMatch","updateHref","activeRE","RegExp","queryStringRE","regexEscapeRE","isAbsolute","href","mode","formatPath","_linkActiveClass","dest","trailingSlashRE","removeEventListener","guardComponent","comp","babelHelpers","classCallCheck","instance","Constructor","TypeError","willAddRoute","Error","addChild","contextEntered","specials","escapeRegex","validChars","generate","invalidChars","repeat","get","child","isEqual","chars","returned","oCreate","create","proto","F","splice","RouteRecognizer","rootState","allSegments","isEmpty","as","handlersFor","hasRoute","output","generateQueryString","pairs","pair","encodeURIComponent","arrayPair","parseQueryString","queryString","keyLength","recognize","silent","pathLen","queryStart","isSlashDropped","solutions","source","hashRE","HTML5History","_ref","onChange","baseEl","document","querySelector","listener","search","hash","window","stop","replaceState","pos","x","pageXOffset","y","pageYOffset","pushState","hashMatch","HashHistory","hashbang","self","raw","formattedPath","isAbsoloute","prefix","AbstractHistory","currentPath","RouteTransition","abort","abortingOnLoad","deactivateQueue","reverseDeactivateQueue","reverse","matched","reuseQueue","runQueue","_onTransitionValidated","_view","queue","step","index","context","_ref$expectBoolean","_ref$postActivate","nextCalled","onError","err","_suppress","onPromiseError","setTimeout","nextWithBoolean","res","ok","nextWithData","exposed","hooks","internalKeysRE","Route","_recognizer","reduce","prev","cur","_notFoundHandler","enumerable","freeze","historyBackends","abstract","html5","Router","_ref$hashbang","_ref$abstract","_ref$history","_ref$saveScrollPosition","saveScrollPosition","_ref$transitionOnLoad","transitionOnLoad","_ref$suppressTransitionError","suppressTransitionError","_ref$root","_ref$linkActiveClass","linkActiveClass","installed","app","_guardRecognizer","_started","_startCb","_currentRoute","_previousTransition","_notFoundRedirect","_beforeEachHooks","_afterEachHooks","_root","_abstract","_hashbang","hasPushState","_history","_historyFallback","inBrowser","History","_match","_saveScrollPosition","_map","on","rootPath","_notFound","_addRoute","_addRedirect","alias","_addAlias","beforeEach","afterEach","App","container","_appContainer","Ctor","_appConstructor","_location","assign","generatedPath","currentParams","targetParams","encodeURI","subRoutes","subPath","redirectPath","_addGuard","aliasPath","mappedPath","_handler","_this2","realPath","_checkGuard","_this3","currentRoute","currentTransition","_prevTransition","beforeHooks","startTransition","_postTransition","nextTick","scrollTo","getElementById","scrollX","offsetTop","install","externalVue"],"mappings":"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","file":"static/js/app.96e6f8da5fb6905004d0.js","sourcesContent":["webpackJsonp([1],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(2);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _App = __webpack_require__(16);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tvar _vueRouter = __webpack_require__(19);\n\t\n\tvar _vueRouter2 = _interopRequireDefault(_vueRouter);\n\t\n\tvar _nav = __webpack_require__(1);\n\t\n\tvar _nav2 = _interopRequireDefault(_nav);\n\t\n\tvar _Hello = __webpack_require__(18);\n\t\n\tvar _Hello2 = _interopRequireDefault(_Hello);\n\t\n\tvar _ButtonView = __webpack_require__(17);\n\t\n\tvar _ButtonView2 = _interopRequireDefault(_ButtonView);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.use(_vueRouter2.default);\n\t\n\tvar router = new _vueRouter2.default();\n\trouter.map({\n\t  '/': {\n\t    component: _Hello2.default\n\t  },\n\t  '/button': {\n\t    component: _ButtonView2.default\n\t  }\n\t});\n\t\n\trouter.redirect({\n\t  '*': '/'\n\t});\n\trouter.start(_App2.default, '#app');\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(10)\n\t__vue_script__ = __webpack_require__(6)\n\t__vue_template__ = __webpack_require__(15)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 2 */,\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _nav = __webpack_require__(1);\n\t\n\tvar _nav2 = _interopRequireDefault(_nav);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  components: { pagenav: _nav2.default }\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      msg: 'button widget'\n\t    };\n\t  }\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      msg: 'a'\n\t    };\n\t  }\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = {\n\t    data: function data() {\n\t        return {\n\t            navMsg: [{\n\t                category: 'pc',\n\t                cates: [{\n\t                    name: 'button',\n\t                    url: 'button'\n\t                }, {\n\t                    name: '类别2',\n\t                    url: 'aa'\n\t                }, {\n\t                    name: '类别3',\n\t                    url: 'aa'\n\t                }]\n\t            }, {\n\t                category: 'm',\n\t                cates: [{\n\t                    name: '类别1',\n\t                    url: 'aa'\n\t                }, {\n\t                    name: '类别2',\n\t                    url: 'aa'\n\t                }, {\n\t                    name: '类别3',\n\t                    url: 'aa'\n\t                }]\n\t            }]\n\t        };\n\t    }\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"static/img/logo.0374887.png\";\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div transition=app> <div class=\\\"clearfix pageleft\\\"> <pagenav></pagenav> </div> <div class=pageright id=pagecontent> <router-view></router-view> </div> </div>\";\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<img src=\" + __webpack_require__(11) + \" width=499 height=100 _v-382637cd=\\\"\\\"> <h1 _v-382637cd=\\\"\\\">There are some components that I collected .</h1>\";\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=wrap _v-4a750c8c=\\\"\\\"> <article class=clearfix _v-4a750c8c=\\\"\\\"> <h2 _v-4a750c8c=\\\"\\\">Button &lt;a&gt;</h2> <div class=\\\"section fl\\\" _v-4a750c8c=\\\"\\\"> <a href=javascript:void(0) class=\\\"btn btn-class1\\\" _v-4a750c8c=\\\"\\\">button</a> </div> <div class=\\\"section fl\\\" _v-4a750c8c=\\\"\\\"> <a href=javascript:void(0) class=\\\"btn btn-disabled\\\" _v-4a750c8c=\\\"\\\">Disabled button</a> </div> </article> <article class=clearfix _v-4a750c8c=\\\"\\\"> <h2 _v-4a750c8c=\\\"\\\">Button &lt;button&gt;</h2> <div class=\\\"section fl\\\" _v-4a750c8c=\\\"\\\"> <button class=\\\"button btn-class1\\\" _v-4a750c8c=\\\"\\\">button</button> </div> <div class=\\\"section fl\\\" _v-4a750c8c=\\\"\\\"> <button class=\\\"button btn-disabled\\\" disabled=disabled _v-4a750c8c=\\\"\\\">Disabled button</button> </div> </article> <article class=clearfix _v-4a750c8c=\\\"\\\"> <h2 _v-4a750c8c=\\\"\\\">Other (use tag a)</h2> <div class=\\\"section fl\\\" _v-4a750c8c=\\\"\\\"> <i class=iconfont _v-4a750c8c=\\\"\\\"></i> <a href=javascript:void(0) class=\\\"btn btn-class1\\\" _v-4a750c8c=\\\"\\\">button</a> </div> </article> </div>\";\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<ul class=nav _v-9e18c704=\\\"\\\"> <li v-for=\\\"item in navMsg\\\" class=cat1 _v-9e18c704=\\\"\\\"> {{item.category}} <ul _v-9e18c704=\\\"\\\"> <li v-for=\\\"item in item.cates\\\" class=cat2 _v-9e18c704=\\\"\\\"> <a v-link=\\\"{path: '/'+item.url}\\\" _v-9e18c704=\\\"\\\">{{item.name}}</a> </li> </ul> </li> </ul>\";\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(7)\n\t__vue_script__ = __webpack_require__(3)\n\t__vue_template__ = __webpack_require__(12)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(9)\n\t__vue_script__ = __webpack_require__(4)\n\t__vue_template__ = __webpack_require__(14)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(8)\n\t__vue_script__ = __webpack_require__(5)\n\t__vue_template__ = __webpack_require__(13)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * vue-router v0.7.13\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.VueRouter = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t  function Target(path, matcher, delegate) {\n\t    this.path = path;\n\t    this.matcher = matcher;\n\t    this.delegate = delegate;\n\t  }\n\t\n\t  Target.prototype = {\n\t    to: function to(target, callback) {\n\t      var delegate = this.delegate;\n\t\n\t      if (delegate && delegate.willAddRoute) {\n\t        target = delegate.willAddRoute(this.matcher.target, target);\n\t      }\n\t\n\t      this.matcher.add(this.path, target);\n\t\n\t      if (callback) {\n\t        if (callback.length === 0) {\n\t          throw new Error(\"You must have an argument in the function passed to `to`\");\n\t        }\n\t        this.matcher.addChild(this.path, target, callback, this.delegate);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function Matcher(target) {\n\t    this.routes = {};\n\t    this.children = {};\n\t    this.target = target;\n\t  }\n\t\n\t  Matcher.prototype = {\n\t    add: function add(path, handler) {\n\t      this.routes[path] = handler;\n\t    },\n\t\n\t    addChild: function addChild(path, target, callback, delegate) {\n\t      var matcher = new Matcher(target);\n\t      this.children[path] = matcher;\n\t\n\t      var match = generateMatch(path, matcher, delegate);\n\t\n\t      if (delegate && delegate.contextEntered) {\n\t        delegate.contextEntered(target, match);\n\t      }\n\t\n\t      callback(match);\n\t    }\n\t  };\n\t\n\t  function generateMatch(startingPath, matcher, delegate) {\n\t    return function (path, nestedCallback) {\n\t      var fullPath = startingPath + path;\n\t\n\t      if (nestedCallback) {\n\t        nestedCallback(generateMatch(fullPath, matcher, delegate));\n\t      } else {\n\t        return new Target(startingPath + path, matcher, delegate);\n\t      }\n\t    };\n\t  }\n\t\n\t  function addRoute(routeArray, path, handler) {\n\t    var len = 0;\n\t    for (var i = 0, l = routeArray.length; i < l; i++) {\n\t      len += routeArray[i].path.length;\n\t    }\n\t\n\t    path = path.substr(len);\n\t    var route = { path: path, handler: handler };\n\t    routeArray.push(route);\n\t  }\n\t\n\t  function eachRoute(baseRoute, matcher, callback, binding) {\n\t    var routes = matcher.routes;\n\t\n\t    for (var path in routes) {\n\t      if (routes.hasOwnProperty(path)) {\n\t        var routeArray = baseRoute.slice();\n\t        addRoute(routeArray, path, routes[path]);\n\t\n\t        if (matcher.children[path]) {\n\t          eachRoute(routeArray, matcher.children[path], callback, binding);\n\t        } else {\n\t          callback.call(binding, routeArray);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function map (callback, addRouteCallback) {\n\t    var matcher = new Matcher();\n\t\n\t    callback(generateMatch(\"\", matcher, this.delegate));\n\t\n\t    eachRoute([], matcher, function (route) {\n\t      if (addRouteCallback) {\n\t        addRouteCallback(this, route);\n\t      } else {\n\t        this.add(route);\n\t      }\n\t    }, this);\n\t  }\n\t\n\t  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\t\n\t  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\t\n\t  var noWarning = false;\n\t  function warn(msg) {\n\t    if (!noWarning && typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  function tryDecode(uri, asComponent) {\n\t    try {\n\t      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n\t    } catch (e) {\n\t      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n\t    }\n\t  }\n\t\n\t  function isArray(test) {\n\t    return Object.prototype.toString.call(test) === \"[object Array]\";\n\t  }\n\t\n\t  // A Segment represents a segment in the original route description.\n\t  // Each Segment type provides an `eachChar` and `regex` method.\n\t  //\n\t  // The `eachChar` method invokes the callback with one or more character\n\t  // specifications. A character specification consumes one or more input\n\t  // characters.\n\t  //\n\t  // The `regex` method returns a regex fragment for the segment. If the\n\t  // segment is a dynamic of star segment, the regex fragment also includes\n\t  // a capture.\n\t  //\n\t  // A character specification contains:\n\t  //\n\t  // * `validChars`: a String with a list of all valid characters, or\n\t  // * `invalidChars`: a String with a list of all invalid characters\n\t  // * `repeat`: true if the character specification can repeat\n\t\n\t  function StaticSegment(string) {\n\t    this.string = string;\n\t  }\n\t  StaticSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      var string = this.string,\n\t          ch;\n\t\n\t      for (var i = 0, l = string.length; i < l; i++) {\n\t        ch = string.charAt(i);\n\t        callback({ validChars: ch });\n\t      }\n\t    },\n\t\n\t    regex: function regex() {\n\t      return this.string.replace(escapeRegex, '\\\\$1');\n\t    },\n\t\n\t    generate: function generate() {\n\t      return this.string;\n\t    }\n\t  };\n\t\n\t  function DynamicSegment(name) {\n\t    this.name = name;\n\t  }\n\t  DynamicSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"/\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"([^/]+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function StarSegment(name) {\n\t    this.name = name;\n\t  }\n\t  StarSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"(.+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function EpsilonSegment() {}\n\t  EpsilonSegment.prototype = {\n\t    eachChar: function eachChar() {},\n\t    regex: function regex() {\n\t      return \"\";\n\t    },\n\t    generate: function generate() {\n\t      return \"\";\n\t    }\n\t  };\n\t\n\t  function parse(route, names, specificity) {\n\t    // normalize route as not starting with a \"/\". Recognition will\n\t    // also normalize.\n\t    if (route.charAt(0) === \"/\") {\n\t      route = route.substr(1);\n\t    }\n\t\n\t    var segments = route.split(\"/\"),\n\t        results = [];\n\t\n\t    // A routes has specificity determined by the order that its different segments\n\t    // appear in. This system mirrors how the magnitude of numbers written as strings\n\t    // works.\n\t    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n\t    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n\t    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n\t    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n\t    // leading symbol, \"1\".\n\t    // The rule is that symbols to the left carry more weight than symbols to the right\n\t    // when a number is written out as a string. In the above strings, the leading digit\n\t    // represents how many 100's are in the number, and it carries more weight than the middle\n\t    // number which represents how many 10's are in the number.\n\t    // This system of number magnitude works well for route specificity, too. A route written as\n\t    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n\t    // `x`, irrespective of the other parts.\n\t    // Because of this similarity, we assign each type of segment a number value written as a\n\t    // string. We can find the specificity of compound routes by concatenating these strings\n\t    // together, from left to right. After we have looped through all of the segments,\n\t    // we convert the string to a number.\n\t    specificity.val = '';\n\t\n\t    for (var i = 0, l = segments.length; i < l; i++) {\n\t      var segment = segments[i],\n\t          match;\n\t\n\t      if (match = segment.match(/^:([^\\/]+)$/)) {\n\t        results.push(new DynamicSegment(match[1]));\n\t        names.push(match[1]);\n\t        specificity.val += '3';\n\t      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n\t        results.push(new StarSegment(match[1]));\n\t        specificity.val += '2';\n\t        names.push(match[1]);\n\t      } else if (segment === \"\") {\n\t        results.push(new EpsilonSegment());\n\t        specificity.val += '1';\n\t      } else {\n\t        results.push(new StaticSegment(segment));\n\t        specificity.val += '4';\n\t      }\n\t    }\n\t\n\t    specificity.val = +specificity.val;\n\t\n\t    return results;\n\t  }\n\t\n\t  // A State has a character specification and (`charSpec`) and a list of possible\n\t  // subsequent states (`nextStates`).\n\t  //\n\t  // If a State is an accepting state, it will also have several additional\n\t  // properties:\n\t  //\n\t  // * `regex`: A regular expression that is used to extract parameters from paths\n\t  //   that reached this accepting state.\n\t  // * `handlers`: Information on how to convert the list of captures into calls\n\t  //   to registered handlers with the specified parameters\n\t  // * `types`: How many static, dynamic or star segments in this route. Used to\n\t  //   decide which route to use if multiple registered routes match a path.\n\t  //\n\t  // Currently, State is implemented naively by looping over `nextStates` and\n\t  // comparing a character specification against a character. A more efficient\n\t  // implementation would use a hash of keys pointing at one or more next states.\n\t\n\t  function State(charSpec) {\n\t    this.charSpec = charSpec;\n\t    this.nextStates = [];\n\t  }\n\t\n\t  State.prototype = {\n\t    get: function get(charSpec) {\n\t      var nextStates = this.nextStates;\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        var child = nextStates[i];\n\t\n\t        var isEqual = child.charSpec.validChars === charSpec.validChars;\n\t        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\t\n\t        if (isEqual) {\n\t          return child;\n\t        }\n\t      }\n\t    },\n\t\n\t    put: function put(charSpec) {\n\t      var state;\n\t\n\t      // If the character specification already exists in a child of the current\n\t      // state, just return that state.\n\t      if (state = this.get(charSpec)) {\n\t        return state;\n\t      }\n\t\n\t      // Make a new state for the character spec\n\t      state = new State(charSpec);\n\t\n\t      // Insert the new state as a child of the current state\n\t      this.nextStates.push(state);\n\t\n\t      // If this character specification repeats, insert the new state as a child\n\t      // of itself. Note that this will not trigger an infinite loop because each\n\t      // transition during recognition consumes a character.\n\t      if (charSpec.repeat) {\n\t        state.nextStates.push(state);\n\t      }\n\t\n\t      // Return the new state\n\t      return state;\n\t    },\n\t\n\t    // Find a list of child states matching the next character\n\t    match: function match(ch) {\n\t      // DEBUG \"Processing `\" + ch + \"`:\"\n\t      var nextStates = this.nextStates,\n\t          child,\n\t          charSpec,\n\t          chars;\n\t\n\t      // DEBUG \"  \" + debugState(this)\n\t      var returned = [];\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        child = nextStates[i];\n\t\n\t        charSpec = child.charSpec;\n\t\n\t        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) !== -1) {\n\t            returned.push(child);\n\t          }\n\t        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) === -1) {\n\t            returned.push(child);\n\t          }\n\t        }\n\t      }\n\t\n\t      return returned;\n\t    }\n\t\n\t    /** IF DEBUG\n\t    , debug: function() {\n\t      var charSpec = this.charSpec,\n\t          debug = \"[\",\n\t          chars = charSpec.validChars || charSpec.invalidChars;\n\t       if (charSpec.invalidChars) { debug += \"^\"; }\n\t      debug += chars;\n\t      debug += \"]\";\n\t       if (charSpec.repeat) { debug += \"+\"; }\n\t       return debug;\n\t    }\n\t    END IF **/\n\t  };\n\t\n\t  /** IF DEBUG\n\t  function debug(log) {\n\t    console.log(log);\n\t  }\n\t\n\t  function debugState(state) {\n\t    return state.nextStates.map(function(n) {\n\t      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n\t      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n\t    }).join(\", \")\n\t  }\n\t  END IF **/\n\t\n\t  // Sort the routes by specificity\n\t  function sortSolutions(states) {\n\t    return states.sort(function (a, b) {\n\t      return b.specificity.val - a.specificity.val;\n\t    });\n\t  }\n\t\n\t  function recognizeChar(states, ch) {\n\t    var nextStates = [];\n\t\n\t    for (var i = 0, l = states.length; i < l; i++) {\n\t      var state = states[i];\n\t\n\t      nextStates = nextStates.concat(state.match(ch));\n\t    }\n\t\n\t    return nextStates;\n\t  }\n\t\n\t  var oCreate = Object.create || function (proto) {\n\t    function F() {}\n\t    F.prototype = proto;\n\t    return new F();\n\t  };\n\t\n\t  function RecognizeResults(queryParams) {\n\t    this.queryParams = queryParams || {};\n\t  }\n\t  RecognizeResults.prototype = oCreate({\n\t    splice: Array.prototype.splice,\n\t    slice: Array.prototype.slice,\n\t    push: Array.prototype.push,\n\t    length: 0,\n\t    queryParams: null\n\t  });\n\t\n\t  function findHandler(state, path, queryParams) {\n\t    var handlers = state.handlers,\n\t        regex = state.regex;\n\t    var captures = path.match(regex),\n\t        currentCapture = 1;\n\t    var result = new RecognizeResults(queryParams);\n\t\n\t    for (var i = 0, l = handlers.length; i < l; i++) {\n\t      var handler = handlers[i],\n\t          names = handler.names,\n\t          params = {};\n\t\n\t      for (var j = 0, m = names.length; j < m; j++) {\n\t        params[names[j]] = captures[currentCapture++];\n\t      }\n\t\n\t      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function addSegment(currentState, segment) {\n\t    segment.eachChar(function (ch) {\n\t      var state;\n\t\n\t      currentState = currentState.put(ch);\n\t    });\n\t\n\t    return currentState;\n\t  }\n\t\n\t  function decodeQueryParamPart(part) {\n\t    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n\t    part = part.replace(/\\+/gm, '%20');\n\t    return tryDecode(part, true);\n\t  }\n\t\n\t  // The main interface\n\t\n\t  var RouteRecognizer = function RouteRecognizer() {\n\t    this.rootState = new State();\n\t    this.names = {};\n\t  };\n\t\n\t  RouteRecognizer.prototype = {\n\t    add: function add(routes, options) {\n\t      var currentState = this.rootState,\n\t          regex = \"^\",\n\t          specificity = {},\n\t          handlers = [],\n\t          allSegments = [],\n\t          name;\n\t\n\t      var isEmpty = true;\n\t\n\t      for (var i = 0, l = routes.length; i < l; i++) {\n\t        var route = routes[i],\n\t            names = [];\n\t\n\t        var segments = parse(route.path, names, specificity);\n\t\n\t        allSegments = allSegments.concat(segments);\n\t\n\t        for (var j = 0, m = segments.length; j < m; j++) {\n\t          var segment = segments[j];\n\t\n\t          if (segment instanceof EpsilonSegment) {\n\t            continue;\n\t          }\n\t\n\t          isEmpty = false;\n\t\n\t          // Add a \"/\" for the new segment\n\t          currentState = currentState.put({ validChars: \"/\" });\n\t          regex += \"/\";\n\t\n\t          // Add a representation of the segment to the NFA and regex\n\t          currentState = addSegment(currentState, segment);\n\t          regex += segment.regex();\n\t        }\n\t\n\t        var handler = { handler: route.handler, names: names };\n\t        handlers.push(handler);\n\t      }\n\t\n\t      if (isEmpty) {\n\t        currentState = currentState.put({ validChars: \"/\" });\n\t        regex += \"/\";\n\t      }\n\t\n\t      currentState.handlers = handlers;\n\t      currentState.regex = new RegExp(regex + \"$\");\n\t      currentState.specificity = specificity;\n\t\n\t      if (name = options && options.as) {\n\t        this.names[name] = {\n\t          segments: allSegments,\n\t          handlers: handlers\n\t        };\n\t      }\n\t    },\n\t\n\t    handlersFor: function handlersFor(name) {\n\t      var route = this.names[name],\n\t          result = [];\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      for (var i = 0, l = route.handlers.length; i < l; i++) {\n\t        result.push(route.handlers[i]);\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    hasRoute: function hasRoute(name) {\n\t      return !!this.names[name];\n\t    },\n\t\n\t    generate: function generate(name, params) {\n\t      var route = this.names[name],\n\t          output = \"\";\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      var segments = route.segments;\n\t\n\t      for (var i = 0, l = segments.length; i < l; i++) {\n\t        var segment = segments[i];\n\t\n\t        if (segment instanceof EpsilonSegment) {\n\t          continue;\n\t        }\n\t\n\t        output += \"/\";\n\t        output += segment.generate(params);\n\t      }\n\t\n\t      if (output.charAt(0) !== '/') {\n\t        output = '/' + output;\n\t      }\n\t\n\t      if (params && params.queryParams) {\n\t        output += this.generateQueryString(params.queryParams);\n\t      }\n\t\n\t      return output;\n\t    },\n\t\n\t    generateQueryString: function generateQueryString(params) {\n\t      var pairs = [];\n\t      var keys = [];\n\t      for (var key in params) {\n\t        if (params.hasOwnProperty(key)) {\n\t          keys.push(key);\n\t        }\n\t      }\n\t      keys.sort();\n\t      for (var i = 0, len = keys.length; i < len; i++) {\n\t        key = keys[i];\n\t        var value = params[key];\n\t        if (value == null) {\n\t          continue;\n\t        }\n\t        var pair = encodeURIComponent(key);\n\t        if (isArray(value)) {\n\t          for (var j = 0, l = value.length; j < l; j++) {\n\t            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n\t            pairs.push(arrayPair);\n\t          }\n\t        } else {\n\t          pair += \"=\" + encodeURIComponent(value);\n\t          pairs.push(pair);\n\t        }\n\t      }\n\t\n\t      if (pairs.length === 0) {\n\t        return '';\n\t      }\n\t\n\t      return \"?\" + pairs.join(\"&\");\n\t    },\n\t\n\t    parseQueryString: function parseQueryString(queryString) {\n\t      var pairs = queryString.split(\"&\"),\n\t          queryParams = {};\n\t      for (var i = 0; i < pairs.length; i++) {\n\t        var pair = pairs[i].split('='),\n\t            key = decodeQueryParamPart(pair[0]),\n\t            keyLength = key.length,\n\t            isArray = false,\n\t            value;\n\t        if (pair.length === 1) {\n\t          value = 'true';\n\t        } else {\n\t          //Handle arrays\n\t          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n\t            isArray = true;\n\t            key = key.slice(0, keyLength - 2);\n\t            if (!queryParams[key]) {\n\t              queryParams[key] = [];\n\t            }\n\t          }\n\t          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n\t        }\n\t        if (isArray) {\n\t          queryParams[key].push(value);\n\t        } else {\n\t          queryParams[key] = value;\n\t        }\n\t      }\n\t      return queryParams;\n\t    },\n\t\n\t    recognize: function recognize(path, silent) {\n\t      noWarning = silent;\n\t      var states = [this.rootState],\n\t          pathLen,\n\t          i,\n\t          l,\n\t          queryStart,\n\t          queryParams = {},\n\t          isSlashDropped = false;\n\t\n\t      queryStart = path.indexOf('?');\n\t      if (queryStart !== -1) {\n\t        var queryString = path.substr(queryStart + 1, path.length);\n\t        path = path.substr(0, queryStart);\n\t        if (queryString) {\n\t          queryParams = this.parseQueryString(queryString);\n\t        }\n\t      }\n\t\n\t      path = tryDecode(path);\n\t      if (!path) return;\n\t\n\t      // DEBUG GROUP path\n\t\n\t      if (path.charAt(0) !== \"/\") {\n\t        path = \"/\" + path;\n\t      }\n\t\n\t      pathLen = path.length;\n\t      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n\t        path = path.substr(0, pathLen - 1);\n\t        isSlashDropped = true;\n\t      }\n\t\n\t      for (i = 0, l = path.length; i < l; i++) {\n\t        states = recognizeChar(states, path.charAt(i));\n\t        if (!states.length) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      // END DEBUG GROUP\n\t\n\t      var solutions = [];\n\t      for (i = 0, l = states.length; i < l; i++) {\n\t        if (states[i].handlers) {\n\t          solutions.push(states[i]);\n\t        }\n\t      }\n\t\n\t      states = sortSolutions(solutions);\n\t\n\t      var state = solutions[0];\n\t\n\t      if (state && state.handlers) {\n\t        // if a trailing slash was dropped and a star segment is the last segment\n\t        // specified, put the trailing slash back\n\t        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n\t          path = path + \"/\";\n\t        }\n\t        return findHandler(state, path, queryParams);\n\t      }\n\t    }\n\t  };\n\t\n\t  RouteRecognizer.prototype.map = map;\n\t\n\t  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\t\n\t  // export default for holding the Vue reference\n\t  var exports$1 = {};\n\t  /**\n\t   * Warn stuff.\n\t   *\n\t   * @param {String} msg\n\t   */\n\t\n\t  function warn$1(msg) {\n\t    /* istanbul ignore next */\n\t    if (typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Resolve a relative path.\n\t   *\n\t   * @param {String} base\n\t   * @param {String} relative\n\t   * @param {Boolean} append\n\t   * @return {String}\n\t   */\n\t\n\t  function resolvePath(base, relative, append) {\n\t    var query = base.match(/(\\?.*)$/);\n\t    if (query) {\n\t      query = query[1];\n\t      base = base.slice(0, -query.length);\n\t    }\n\t    // a query!\n\t    if (relative.charAt(0) === '?') {\n\t      return base + relative;\n\t    }\n\t    var stack = base.split('/');\n\t    // remove trailing segment if:\n\t    // - not appending\n\t    // - appending to trailing slash (last segment is empty)\n\t    if (!append || !stack[stack.length - 1]) {\n\t      stack.pop();\n\t    }\n\t    // resolve relative path\n\t    var segments = relative.replace(/^\\//, '').split('/');\n\t    for (var i = 0; i < segments.length; i++) {\n\t      var segment = segments[i];\n\t      if (segment === '.') {\n\t        continue;\n\t      } else if (segment === '..') {\n\t        stack.pop();\n\t      } else {\n\t        stack.push(segment);\n\t      }\n\t    }\n\t    // ensure leading slash\n\t    if (stack[0] !== '') {\n\t      stack.unshift('');\n\t    }\n\t    return stack.join('/');\n\t  }\n\t\n\t  /**\n\t   * Forgiving check for a promise\n\t   *\n\t   * @param {Object} p\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isPromise(p) {\n\t    return p && typeof p.then === 'function';\n\t  }\n\t\n\t  /**\n\t   * Retrive a route config field from a component instance\n\t   * OR a component contructor.\n\t   *\n\t   * @param {Function|Vue} component\n\t   * @param {String} name\n\t   * @return {*}\n\t   */\n\t\n\t  function getRouteConfig(component, name) {\n\t    var options = component && (component.$options || component.options);\n\t    return options && options.route && options.route[name];\n\t  }\n\t\n\t  /**\n\t   * Resolve an async component factory. Have to do a dirty\n\t   * mock here because of Vue core's internal API depends on\n\t   * an ID check.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Function} cb\n\t   */\n\t\n\t  var resolver = undefined;\n\t\n\t  function resolveAsyncComponent(handler, cb) {\n\t    if (!resolver) {\n\t      resolver = {\n\t        resolve: exports$1.Vue.prototype._resolveComponent,\n\t        $options: {\n\t          components: {\n\t            _: handler.component\n\t          }\n\t        }\n\t      };\n\t    } else {\n\t      resolver.$options.components._ = handler.component;\n\t    }\n\t    resolver.resolve('_', function (Component) {\n\t      handler.component = Component;\n\t      cb(Component);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Map the dynamic segments in a path to params.\n\t   *\n\t   * @param {String} path\n\t   * @param {Object} params\n\t   * @param {Object} query\n\t   */\n\t\n\t  function mapParams(path, params, query) {\n\t    if (params === undefined) params = {};\n\t\n\t    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n\t      var val = params[key];\n\t      /* istanbul ignore if */\n\t      if (!val) {\n\t        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n\t      }\n\t      return val || '';\n\t    });\n\t    if (query) {\n\t      path += genQuery(query);\n\t    }\n\t    return path;\n\t  }\n\t\n\t  var hashRE = /#.*$/;\n\t\n\t  var HTML5History = (function () {\n\t    function HTML5History(_ref) {\n\t      var root = _ref.root;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HTML5History);\n\t\n\t      if (root && root !== '/') {\n\t        // make sure there's the starting slash\n\t        if (root.charAt(0) !== '/') {\n\t          root = '/' + root;\n\t        }\n\t        // remove trailing slash\n\t        this.root = root.replace(/\\/$/, '');\n\t        this.rootRE = new RegExp('^\\\\' + this.root);\n\t      } else {\n\t        this.root = null;\n\t      }\n\t      this.onChange = onChange;\n\t      // check base tag\n\t      var baseEl = document.querySelector('base');\n\t      this.base = baseEl && baseEl.getAttribute('href');\n\t    }\n\t\n\t    HTML5History.prototype.start = function start() {\n\t      var _this = this;\n\t\n\t      this.listener = function (e) {\n\t        var url = location.pathname + location.search;\n\t        if (_this.root) {\n\t          url = url.replace(_this.rootRE, '');\n\t        }\n\t        _this.onChange(url, e && e.state, location.hash);\n\t      };\n\t      window.addEventListener('popstate', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HTML5History.prototype.stop = function stop() {\n\t      window.removeEventListener('popstate', this.listener);\n\t    };\n\t\n\t    HTML5History.prototype.go = function go(path, replace, append) {\n\t      var url = this.formatPath(path, append);\n\t      if (replace) {\n\t        history.replaceState({}, '', url);\n\t      } else {\n\t        // record scroll position by replacing current state\n\t        history.replaceState({\n\t          pos: {\n\t            x: window.pageXOffset,\n\t            y: window.pageYOffset\n\t          }\n\t        }, '', location.href);\n\t        // then push new state\n\t        history.pushState({}, '', url);\n\t      }\n\t      var hashMatch = path.match(hashRE);\n\t      var hash = hashMatch && hashMatch[0];\n\t      path = url\n\t      // strip hash so it doesn't mess up params\n\t      .replace(hashRE, '')\n\t      // remove root before matching\n\t      .replace(this.rootRE, '');\n\t      this.onChange(path, null, hash);\n\t    };\n\t\n\t    HTML5History.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/'\n\t      // absolute path\n\t      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n\t    };\n\t\n\t    return HTML5History;\n\t  })();\n\t\n\t  var HashHistory = (function () {\n\t    function HashHistory(_ref) {\n\t      var hashbang = _ref.hashbang;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HashHistory);\n\t\n\t      this.hashbang = hashbang;\n\t      this.onChange = onChange;\n\t    }\n\t\n\t    HashHistory.prototype.start = function start() {\n\t      var self = this;\n\t      this.listener = function () {\n\t        var path = location.hash;\n\t        var raw = path.replace(/^#!?/, '');\n\t        // always\n\t        if (raw.charAt(0) !== '/') {\n\t          raw = '/' + raw;\n\t        }\n\t        var formattedPath = self.formatPath(raw);\n\t        if (formattedPath !== path) {\n\t          location.replace(formattedPath);\n\t          return;\n\t        }\n\t        // determine query\n\t        // note it's possible to have queries in both the actual URL\n\t        // and the hash fragment itself.\n\t        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n\t        self.onChange(path.replace(/^#!?/, '') + query);\n\t      };\n\t      window.addEventListener('hashchange', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HashHistory.prototype.stop = function stop() {\n\t      window.removeEventListener('hashchange', this.listener);\n\t    };\n\t\n\t    HashHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.formatPath(path, append);\n\t      if (replace) {\n\t        location.replace(path);\n\t      } else {\n\t        location.hash = path;\n\t      }\n\t    };\n\t\n\t    HashHistory.prototype.formatPath = function formatPath(path, append) {\n\t      var isAbsoloute = path.charAt(0) === '/';\n\t      var prefix = '#' + (this.hashbang ? '!' : '');\n\t      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n\t    };\n\t\n\t    return HashHistory;\n\t  })();\n\t\n\t  var AbstractHistory = (function () {\n\t    function AbstractHistory(_ref) {\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, AbstractHistory);\n\t\n\t      this.onChange = onChange;\n\t      this.currentPath = '/';\n\t    }\n\t\n\t    AbstractHistory.prototype.start = function start() {\n\t      this.onChange('/');\n\t    };\n\t\n\t    AbstractHistory.prototype.stop = function stop() {\n\t      // noop\n\t    };\n\t\n\t    AbstractHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.currentPath = this.formatPath(path, append);\n\t      this.onChange(path);\n\t    };\n\t\n\t    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n\t    };\n\t\n\t    return AbstractHistory;\n\t  })();\n\t\n\t  /**\n\t   * Determine the reusability of an existing router view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function canReuse(view, handler, transition) {\n\t    var component = view.childVM;\n\t    if (!component || !handler) {\n\t      return false;\n\t    }\n\t    // important: check view.Component here because it may\n\t    // have been changed in activate hook\n\t    if (view.Component !== handler.component) {\n\t      return false;\n\t    }\n\t    var canReuseFn = getRouteConfig(component, 'canReuse');\n\t    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n\t      to: transition.to,\n\t      from: transition.from\n\t    }) : true; // defaults to true\n\t  }\n\t\n\t  /**\n\t   * Check if a component can deactivate.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canDeactivate(view, transition, next) {\n\t    var fromComponent = view.childVM;\n\t    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHook(hook, fromComponent, next, {\n\t        expectBoolean: true\n\t      });\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if a component can activate.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canActivate(handler, transition, next) {\n\t    resolveAsyncComponent(handler, function (Component) {\n\t      // have to check due to async-ness\n\t      if (transition.aborted) {\n\t        return;\n\t      }\n\t      // determine if this component can be activated\n\t      var hook = getRouteConfig(Component, 'canActivate');\n\t      if (!hook) {\n\t        next();\n\t      } else {\n\t        transition.callHook(hook, null, next, {\n\t          expectBoolean: true\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Call deactivate hooks for existing router-views.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function deactivate(view, transition, next) {\n\t    var component = view.childVM;\n\t    var hook = getRouteConfig(component, 'deactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHooks(hook, component, next);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Activate / switch component for a router-view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Number} depth\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function activate(view, transition, depth, cb, reuse) {\n\t    var handler = transition.activateQueue[depth];\n\t    if (!handler) {\n\t      saveChildView(view);\n\t      if (view._bound) {\n\t        view.setComponent(null);\n\t      }\n\t      cb && cb();\n\t      return;\n\t    }\n\t\n\t    var Component = view.Component = handler.component;\n\t    var activateHook = getRouteConfig(Component, 'activate');\n\t    var dataHook = getRouteConfig(Component, 'data');\n\t    var waitForData = getRouteConfig(Component, 'waitForData');\n\t\n\t    view.depth = depth;\n\t    view.activated = false;\n\t\n\t    var component = undefined;\n\t    var loading = !!(dataHook && !waitForData);\n\t\n\t    // \"reuse\" is a flag passed down when the parent view is\n\t    // either reused via keep-alive or as a child of a kept-alive view.\n\t    // of course we can only reuse if the current kept-alive instance\n\t    // is of the correct type.\n\t    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\t\n\t    if (reuse) {\n\t      // just reuse\n\t      component = view.childVM;\n\t      component.$loadingRouteData = loading;\n\t    } else {\n\t      saveChildView(view);\n\t\n\t      // unbuild current component. this step also destroys\n\t      // and removes all nested child views.\n\t      view.unbuild(true);\n\t\n\t      // build the new component. this will also create the\n\t      // direct child view of the current one. it will register\n\t      // itself as view.childView.\n\t      component = view.build({\n\t        _meta: {\n\t          $loadingRouteData: loading\n\t        },\n\t        created: function created() {\n\t          this._routerView = view;\n\t        }\n\t      });\n\t\n\t      // handle keep-alive.\n\t      // when a kept-alive child vm is restored, we need to\n\t      // add its cached child views into the router's view list,\n\t      // and also properly update current view's child view.\n\t      if (view.keepAlive) {\n\t        component.$loadingRouteData = loading;\n\t        var cachedChildView = component._keepAliveRouterView;\n\t        if (cachedChildView) {\n\t          view.childView = cachedChildView;\n\t          component._keepAliveRouterView = null;\n\t        }\n\t      }\n\t    }\n\t\n\t    // cleanup the component in case the transition is aborted\n\t    // before the component is ever inserted.\n\t    var cleanup = function cleanup() {\n\t      component.$destroy();\n\t    };\n\t\n\t    // actually insert the component and trigger transition\n\t    var insert = function insert() {\n\t      if (reuse) {\n\t        cb && cb();\n\t        return;\n\t      }\n\t      var router = transition.router;\n\t      if (router._rendered || router._transitionOnLoad) {\n\t        view.transition(component);\n\t      } else {\n\t        // no transition on first render, manual transition\n\t        /* istanbul ignore if */\n\t        if (view.setCurrent) {\n\t          // 0.12 compat\n\t          view.setCurrent(component);\n\t        } else {\n\t          // 1.0\n\t          view.childVM = component;\n\t        }\n\t        component.$before(view.anchor, null, false);\n\t      }\n\t      cb && cb();\n\t    };\n\t\n\t    var afterData = function afterData() {\n\t      // activate the child view\n\t      if (view.childView) {\n\t        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n\t      }\n\t      insert();\n\t    };\n\t\n\t    // called after activation hook is resolved\n\t    var afterActivate = function afterActivate() {\n\t      view.activated = true;\n\t      if (dataHook && waitForData) {\n\t        // wait until data loaded to insert\n\t        loadData(component, transition, dataHook, afterData, cleanup);\n\t      } else {\n\t        // load data and insert at the same time\n\t        if (dataHook) {\n\t          loadData(component, transition, dataHook);\n\t        }\n\t        afterData();\n\t      }\n\t    };\n\t\n\t    if (activateHook) {\n\t      transition.callHooks(activateHook, component, afterActivate, {\n\t        cleanup: cleanup,\n\t        postActivate: true\n\t      });\n\t    } else {\n\t      afterActivate();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reuse a view, just reload data if necessary.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function reuse(view, transition) {\n\t    var component = view.childVM;\n\t    var dataHook = getRouteConfig(component, 'data');\n\t    if (dataHook) {\n\t      loadData(component, transition, dataHook);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Asynchronously load and apply data to component.\n\t   *\n\t   * @param {Vue} component\n\t   * @param {Transition} transition\n\t   * @param {Function} hook\n\t   * @param {Function} cb\n\t   * @param {Function} cleanup\n\t   */\n\t\n\t  function loadData(component, transition, hook, cb, cleanup) {\n\t    component.$loadingRouteData = true;\n\t    transition.callHooks(hook, component, function () {\n\t      component.$loadingRouteData = false;\n\t      component.$emit('route-data-loaded', component);\n\t      cb && cb();\n\t    }, {\n\t      cleanup: cleanup,\n\t      postActivate: true,\n\t      processData: function processData(data) {\n\t        // handle promise sugar syntax\n\t        var promises = [];\n\t        if (isPlainObject(data)) {\n\t          Object.keys(data).forEach(function (key) {\n\t            var val = data[key];\n\t            if (isPromise(val)) {\n\t              promises.push(val.then(function (resolvedVal) {\n\t                component.$set(key, resolvedVal);\n\t              }));\n\t            } else {\n\t              component.$set(key, val);\n\t            }\n\t          });\n\t        }\n\t        if (promises.length) {\n\t          return promises[0].constructor.all(promises);\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Save the child view for a kept-alive view so that\n\t   * we can restore it when it is switched back to.\n\t   *\n\t   * @param {Directive} view\n\t   */\n\t\n\t  function saveChildView(view) {\n\t    if (view.keepAlive && view.childVM && view.childView) {\n\t      view.childVM._keepAliveRouterView = view.childView;\n\t    }\n\t    view.childView = null;\n\t  }\n\t\n\t  /**\n\t   * Check plain object.\n\t   *\n\t   * @param {*} val\n\t   */\n\t\n\t  function isPlainObject(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  /**\n\t   * A RouteTransition object manages the pipeline of a\n\t   * router-view switching process. This is also the object\n\t   * passed into user route hooks.\n\t   *\n\t   * @param {Router} router\n\t   * @param {Route} to\n\t   * @param {Route} from\n\t   */\n\t\n\t  var RouteTransition = (function () {\n\t    function RouteTransition(router, to, from) {\n\t      babelHelpers.classCallCheck(this, RouteTransition);\n\t\n\t      this.router = router;\n\t      this.to = to;\n\t      this.from = from;\n\t      this.next = null;\n\t      this.aborted = false;\n\t      this.done = false;\n\t    }\n\t\n\t    /**\n\t     * Abort current transition and return to previous location.\n\t     */\n\t\n\t    RouteTransition.prototype.abort = function abort() {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        // if the root path throws an error during validation\n\t        // on initial load, it gets caught in an infinite loop.\n\t        var abortingOnLoad = !this.from.path && this.to.path === '/';\n\t        if (!abortingOnLoad) {\n\t          this.router.replace(this.from.path || '/');\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Abort current transition and redirect to a new location.\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    RouteTransition.prototype.redirect = function redirect(path) {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        if (typeof path === 'string') {\n\t          path = mapParams(path, this.to.params, this.to.query);\n\t        } else {\n\t          path.params = path.params || this.to.params;\n\t          path.query = path.query || this.to.query;\n\t        }\n\t        this.router.replace(path);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * A router view transition's pipeline can be described as\n\t     * follows, assuming we are transitioning from an existing\n\t     * <router-view> chain [Component A, Component B] to a new\n\t     * chain [Component A, Component C]:\n\t     *\n\t     *  A    A\n\t     *  | => |\n\t     *  B    C\n\t     *\n\t     * 1. Reusablity phase:\n\t     *   -> canReuse(A, A)\n\t     *   -> canReuse(B, C)\n\t     *   -> determine new queues:\n\t     *      - deactivation: [B]\n\t     *      - activation: [C]\n\t     *\n\t     * 2. Validation phase:\n\t     *   -> canDeactivate(B)\n\t     *   -> canActivate(C)\n\t     *\n\t     * 3. Activation phase:\n\t     *   -> deactivate(B)\n\t     *   -> activate(C)\n\t     *\n\t     * Each of these steps can be asynchronous, and any\n\t     * step can potentially abort the transition.\n\t     *\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.start = function start(cb) {\n\t      var transition = this;\n\t\n\t      // determine the queue of views to deactivate\n\t      var deactivateQueue = [];\n\t      var view = this.router._rootView;\n\t      while (view) {\n\t        deactivateQueue.unshift(view);\n\t        view = view.childView;\n\t      }\n\t      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\t\n\t      // determine the queue of route handlers to activate\n\t      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n\t        return match.handler;\n\t      });\n\t\n\t      // 1. Reusability phase\n\t      var i = undefined,\n\t          reuseQueue = undefined;\n\t      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n\t        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n\t          break;\n\t        }\n\t      }\n\t      if (i > 0) {\n\t        reuseQueue = reverseDeactivateQueue.slice(0, i);\n\t        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n\t        activateQueue = activateQueue.slice(i);\n\t      }\n\t\n\t      // 2. Validation phase\n\t      transition.runQueue(deactivateQueue, canDeactivate, function () {\n\t        transition.runQueue(activateQueue, canActivate, function () {\n\t          transition.runQueue(deactivateQueue, deactivate, function () {\n\t            // 3. Activation phase\n\t\n\t            // Update router current route\n\t            transition.router._onTransitionValidated(transition);\n\t\n\t            // trigger reuse for all reused views\n\t            reuseQueue && reuseQueue.forEach(function (view) {\n\t              return reuse(view, transition);\n\t            });\n\t\n\t            // the root of the chain that needs to be replaced\n\t            // is the top-most non-reusable view.\n\t            if (deactivateQueue.length) {\n\t              var _view = deactivateQueue[deactivateQueue.length - 1];\n\t              var depth = reuseQueue ? reuseQueue.length : 0;\n\t              activate(_view, transition, depth, cb);\n\t            } else {\n\t              cb();\n\t            }\n\t          });\n\t        });\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Asynchronously and sequentially apply a function to a\n\t     * queue.\n\t     *\n\t     * @param {Array} queue\n\t     * @param {Function} fn\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n\t      var transition = this;\n\t      step(0);\n\t      function step(index) {\n\t        if (index >= queue.length) {\n\t          cb();\n\t        } else {\n\t          fn(queue[index], transition, function () {\n\t            step(index + 1);\n\t          });\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a user provided route transition hook and handle\n\t     * the response (e.g. if the user returns a promise).\n\t     *\n\t     * If the user neither expects an argument nor returns a\n\t     * promise, the hook is assumed to be synchronous.\n\t     *\n\t     * @param {Function} hook\n\t     * @param {*} [context]\n\t     * @param {Function} [cb]\n\t     * @param {Object} [options]\n\t     *                 - {Boolean} expectBoolean\n\t     *                 - {Boolean} postActive\n\t     *                 - {Function} processData\n\t     *                 - {Function} cleanup\n\t     */\n\t\n\t    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n\t      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t      var _ref$expectBoolean = _ref.expectBoolean;\n\t      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n\t      var _ref$postActivate = _ref.postActivate;\n\t      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n\t      var processData = _ref.processData;\n\t      var cleanup = _ref.cleanup;\n\t\n\t      var transition = this;\n\t      var nextCalled = false;\n\t\n\t      // abort the transition\n\t      var abort = function abort() {\n\t        cleanup && cleanup();\n\t        transition.abort();\n\t      };\n\t\n\t      // handle errors\n\t      var onError = function onError(err) {\n\t        postActivate ? next() : abort();\n\t        if (err && !transition.router._suppress) {\n\t          warn$1('Uncaught error during transition: ');\n\t          throw err instanceof Error ? err : new Error(err);\n\t        }\n\t      };\n\t\n\t      // since promise swallows errors, we have to\n\t      // throw it in the next tick...\n\t      var onPromiseError = function onPromiseError(err) {\n\t        try {\n\t          onError(err);\n\t        } catch (e) {\n\t          setTimeout(function () {\n\t            throw e;\n\t          }, 0);\n\t        }\n\t      };\n\t\n\t      // advance the transition to the next step\n\t      var next = function next() {\n\t        if (nextCalled) {\n\t          warn$1('transition.next() should be called only once.');\n\t          return;\n\t        }\n\t        nextCalled = true;\n\t        if (transition.aborted) {\n\t          cleanup && cleanup();\n\t          return;\n\t        }\n\t        cb && cb();\n\t      };\n\t\n\t      var nextWithBoolean = function nextWithBoolean(res) {\n\t        if (typeof res === 'boolean') {\n\t          res ? next() : abort();\n\t        } else if (isPromise(res)) {\n\t          res.then(function (ok) {\n\t            ok ? next() : abort();\n\t          }, onPromiseError);\n\t        } else if (!hook.length) {\n\t          next();\n\t        }\n\t      };\n\t\n\t      var nextWithData = function nextWithData(data) {\n\t        var res = undefined;\n\t        try {\n\t          res = processData(data);\n\t        } catch (err) {\n\t          return onError(err);\n\t        }\n\t        if (isPromise(res)) {\n\t          res.then(next, onPromiseError);\n\t        } else {\n\t          next();\n\t        }\n\t      };\n\t\n\t      // expose a clone of the transition object, so that each\n\t      // hook gets a clean copy and prevent the user from\n\t      // messing with the internals.\n\t      var exposed = {\n\t        to: transition.to,\n\t        from: transition.from,\n\t        abort: abort,\n\t        next: processData ? nextWithData : next,\n\t        redirect: function redirect() {\n\t          transition.redirect.apply(transition, arguments);\n\t        }\n\t      };\n\t\n\t      // actually call the hook\n\t      var res = undefined;\n\t      try {\n\t        res = hook.call(context, exposed);\n\t      } catch (err) {\n\t        return onError(err);\n\t      }\n\t\n\t      if (expectBoolean) {\n\t        // boolean hooks\n\t        nextWithBoolean(res);\n\t      } else if (isPromise(res)) {\n\t        // promise\n\t        if (processData) {\n\t          res.then(nextWithData, onPromiseError);\n\t        } else {\n\t          res.then(next, onPromiseError);\n\t        }\n\t      } else if (processData && isPlainOjbect(res)) {\n\t        // data promise sugar\n\t        nextWithData(res);\n\t      } else if (!hook.length) {\n\t        next();\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a single hook or an array of async hooks in series.\n\t     *\n\t     * @param {Array} hooks\n\t     * @param {*} context\n\t     * @param {Function} cb\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n\t      var _this = this;\n\t\n\t      if (Array.isArray(hooks)) {\n\t        this.runQueue(hooks, function (hook, _, next) {\n\t          if (!_this.aborted) {\n\t            _this.callHook(hook, context, next, options);\n\t          }\n\t        }, cb);\n\t      } else {\n\t        this.callHook(hooks, context, cb, options);\n\t      }\n\t    };\n\t\n\t    return RouteTransition;\n\t  })();\n\t\n\t  function isPlainOjbect(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  function toArray(val) {\n\t    return val ? Array.prototype.slice.call(val) : [];\n\t  }\n\t\n\t  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\t\n\t  /**\n\t   * Route Context Object\n\t   *\n\t   * @param {String} path\n\t   * @param {Router} router\n\t   */\n\t\n\t  var Route = function Route(path, router) {\n\t    var _this = this;\n\t\n\t    babelHelpers.classCallCheck(this, Route);\n\t\n\t    var matched = router._recognizer.recognize(path);\n\t    if (matched) {\n\t      // copy all custom fields from route configs\n\t      [].forEach.call(matched, function (match) {\n\t        for (var key in match.handler) {\n\t          if (!internalKeysRE.test(key)) {\n\t            _this[key] = match.handler[key];\n\t          }\n\t        }\n\t      });\n\t      // set query and params\n\t      this.query = matched.queryParams;\n\t      this.params = [].reduce.call(matched, function (prev, cur) {\n\t        if (cur.params) {\n\t          for (var key in cur.params) {\n\t            prev[key] = cur.params[key];\n\t          }\n\t        }\n\t        return prev;\n\t      }, {});\n\t    }\n\t    // expose path and router\n\t    this.path = path;\n\t    // for internal use\n\t    this.matched = matched || router._notFoundHandler;\n\t    // internal reference to router\n\t    Object.defineProperty(this, 'router', {\n\t      enumerable: false,\n\t      value: router\n\t    });\n\t    // Important: freeze self to prevent observation\n\t    Object.freeze(this);\n\t  };\n\t\n\t  function applyOverride (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var extend = _Vue$util.extend;\n\t    var isArray = _Vue$util.isArray;\n\t    var defineReactive = _Vue$util.defineReactive;\n\t\n\t    // override Vue's init and destroy process to keep track of router instances\n\t    var init = Vue.prototype._init;\n\t    Vue.prototype._init = function (options) {\n\t      options = options || {};\n\t      var root = options._parent || options.parent || this;\n\t      var router = root.$router;\n\t      var route = root.$route;\n\t      if (router) {\n\t        // expose router\n\t        this.$router = router;\n\t        router._children.push(this);\n\t        /* istanbul ignore if */\n\t        if (this._defineMeta) {\n\t          // 0.12\n\t          this._defineMeta('$route', route);\n\t        } else {\n\t          // 1.0\n\t          defineReactive(this, '$route', route);\n\t        }\n\t      }\n\t      init.call(this, options);\n\t    };\n\t\n\t    var destroy = Vue.prototype._destroy;\n\t    Vue.prototype._destroy = function () {\n\t      if (!this._isBeingDestroyed && this.$router) {\n\t        this.$router._children.$remove(this);\n\t      }\n\t      destroy.apply(this, arguments);\n\t    };\n\t\n\t    // 1.0 only: enable route mixins\n\t    var strats = Vue.config.optionMergeStrategies;\n\t    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\t\n\t    if (strats) {\n\t      strats.route = function (parentVal, childVal) {\n\t        if (!childVal) return parentVal;\n\t        if (!parentVal) return childVal;\n\t        var ret = {};\n\t        extend(ret, parentVal);\n\t        for (var key in childVal) {\n\t          var a = ret[key];\n\t          var b = childVal[key];\n\t          // for data, activate and deactivate, we need to merge them into\n\t          // arrays similar to lifecycle hooks.\n\t          if (a && hooksToMergeRE.test(key)) {\n\t            ret[key] = (isArray(a) ? a : [a]).concat(b);\n\t          } else {\n\t            ret[key] = b;\n\t          }\n\t        }\n\t        return ret;\n\t      };\n\t    }\n\t  }\n\t\n\t  function View (Vue) {\n\t\n\t    var _ = Vue.util;\n\t    var componentDef =\n\t    // 0.12\n\t    Vue.directive('_component') ||\n\t    // 1.0\n\t    Vue.internalDirectives.component;\n\t    // <router-view> extends the internal component directive\n\t    var viewDef = _.extend({}, componentDef);\n\t\n\t    // with some overrides\n\t    _.extend(viewDef, {\n\t\n\t      _isRouterView: true,\n\t\n\t      bind: function bind() {\n\t        var route = this.vm.$route;\n\t        /* istanbul ignore if */\n\t        if (!route) {\n\t          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n\t          return;\n\t        }\n\t        // force dynamic directive so v-component doesn't\n\t        // attempt to build right now\n\t        this._isDynamicLiteral = true;\n\t        // finally, init by delegating to v-component\n\t        componentDef.bind.call(this);\n\t\n\t        // locate the parent view\n\t        var parentView = undefined;\n\t        var parent = this.vm;\n\t        while (parent) {\n\t          if (parent._routerView) {\n\t            parentView = parent._routerView;\n\t            break;\n\t          }\n\t          parent = parent.$parent;\n\t        }\n\t        if (parentView) {\n\t          // register self as a child of the parent view,\n\t          // instead of activating now. This is so that the\n\t          // child's activate hook is called after the\n\t          // parent's has resolved.\n\t          this.parentView = parentView;\n\t          parentView.childView = this;\n\t        } else {\n\t          // this is the root view!\n\t          var router = route.router;\n\t          router._rootView = this;\n\t        }\n\t\n\t        // handle late-rendered view\n\t        // two possibilities:\n\t        // 1. root view rendered after transition has been\n\t        //    validated;\n\t        // 2. child view rendered after parent view has been\n\t        //    activated.\n\t        var transition = route.router._currentTransition;\n\t        if (!parentView && transition.done || parentView && parentView.activated) {\n\t          var depth = parentView ? parentView.depth + 1 : 0;\n\t          activate(this, transition, depth);\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        if (this.parentView) {\n\t          this.parentView.childView = null;\n\t        }\n\t        componentDef.unbind.call(this);\n\t      }\n\t    });\n\t\n\t    Vue.elementDirective('router-view', viewDef);\n\t  }\n\t\n\t  var trailingSlashRE = /\\/$/;\n\t  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\t  var queryStringRE = /\\?.*$/;\n\t\n\t  // install v-link, which provides navigation support for\n\t  // HTML5 history mode\n\t  function Link (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var _bind = _Vue$util.bind;\n\t    var isObject = _Vue$util.isObject;\n\t    var addClass = _Vue$util.addClass;\n\t    var removeClass = _Vue$util.removeClass;\n\t\n\t    var onPriority = Vue.directive('on').priority;\n\t    var LINK_UPDATE = '__vue-router-link-update__';\n\t\n\t    var activeId = 0;\n\t\n\t    Vue.directive('link-active', {\n\t      priority: 9999,\n\t      bind: function bind() {\n\t        var _this = this;\n\t\n\t        var id = String(activeId++);\n\t        // collect v-links contained within this element.\n\t        // we need do this here before the parent-child relationship\n\t        // gets messed up by terminal directives (if, for, components)\n\t        var childLinks = this.el.querySelectorAll('[v-link]');\n\t        for (var i = 0, l = childLinks.length; i < l; i++) {\n\t          var link = childLinks[i];\n\t          var existingId = link.getAttribute(LINK_UPDATE);\n\t          var value = existingId ? existingId + ',' + id : id;\n\t          // leave a mark on the link element which can be persisted\n\t          // through fragment clones.\n\t          link.setAttribute(LINK_UPDATE, value);\n\t        }\n\t        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n\t          if (link.activeIds.indexOf(id) > -1) {\n\t            link.updateClasses(path, _this.el);\n\t          }\n\t        });\n\t      },\n\t      unbind: function unbind() {\n\t        this.vm.$off(LINK_UPDATE, this.cb);\n\t      }\n\t    });\n\t\n\t    Vue.directive('link', {\n\t      priority: onPriority - 2,\n\t\n\t      bind: function bind() {\n\t        var vm = this.vm;\n\t        /* istanbul ignore if */\n\t        if (!vm.$route) {\n\t          warn$1('v-link can only be used inside a router-enabled app.');\n\t          return;\n\t        }\n\t        this.router = vm.$route.router;\n\t        // update things when the route changes\n\t        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n\t        // check v-link-active ids\n\t        var activeIds = this.el.getAttribute(LINK_UPDATE);\n\t        if (activeIds) {\n\t          this.el.removeAttribute(LINK_UPDATE);\n\t          this.activeIds = activeIds.split(',');\n\t        }\n\t        // no need to handle click if link expects to be opened\n\t        // in a new window/tab.\n\t        /* istanbul ignore if */\n\t        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n\t          return;\n\t        }\n\t        // handle click\n\t        this.handler = _bind(this.onClick, this);\n\t        this.el.addEventListener('click', this.handler);\n\t      },\n\t\n\t      update: function update(target) {\n\t        this.target = target;\n\t        if (isObject(target)) {\n\t          this.append = target.append;\n\t          this.exact = target.exact;\n\t          this.prevActiveClass = this.activeClass;\n\t          this.activeClass = target.activeClass;\n\t        }\n\t        this.onRouteUpdate(this.vm.$route);\n\t      },\n\t\n\t      onClick: function onClick(e) {\n\t        // don't redirect with control keys\n\t        /* istanbul ignore if */\n\t        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\t        // don't redirect when preventDefault called\n\t        /* istanbul ignore if */\n\t        if (e.defaultPrevented) return;\n\t        // don't redirect on right click\n\t        /* istanbul ignore if */\n\t        if (e.button !== 0) return;\n\t\n\t        var target = this.target;\n\t        if (target) {\n\t          // v-link with expression, just go\n\t          e.preventDefault();\n\t          this.router.go(target);\n\t        } else {\n\t          // no expression, delegate for an <a> inside\n\t          var el = e.target;\n\t          while (el.tagName !== 'A' && el !== this.el) {\n\t            el = el.parentNode;\n\t          }\n\t          if (el.tagName === 'A' && sameOrigin(el)) {\n\t            e.preventDefault();\n\t            var path = el.pathname;\n\t            if (this.router.history.root) {\n\t              path = path.replace(this.router.history.rootRE, '');\n\t            }\n\t            this.router.go({\n\t              path: path,\n\t              replace: target && target.replace,\n\t              append: target && target.append\n\t            });\n\t          }\n\t        }\n\t      },\n\t\n\t      onRouteUpdate: function onRouteUpdate(route) {\n\t        // router.stringifyPath is dependent on current route\n\t        // and needs to be called again whenver route changes.\n\t        var newPath = this.router.stringifyPath(this.target);\n\t        if (this.path !== newPath) {\n\t          this.path = newPath;\n\t          this.updateActiveMatch();\n\t          this.updateHref();\n\t        }\n\t        if (this.activeIds) {\n\t          this.vm.$emit(LINK_UPDATE, this, route.path);\n\t        } else {\n\t          this.updateClasses(route.path, this.el);\n\t        }\n\t      },\n\t\n\t      updateActiveMatch: function updateActiveMatch() {\n\t        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n\t      },\n\t\n\t      updateHref: function updateHref() {\n\t        if (this.el.tagName !== 'A') {\n\t          return;\n\t        }\n\t        var path = this.path;\n\t        var router = this.router;\n\t        var isAbsolute = path.charAt(0) === '/';\n\t        // do not format non-hash relative paths\n\t        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n\t        if (href) {\n\t          this.el.href = href;\n\t        } else {\n\t          this.el.removeAttribute('href');\n\t        }\n\t      },\n\t\n\t      updateClasses: function updateClasses(path, el) {\n\t        var activeClass = this.activeClass || this.router._linkActiveClass;\n\t        // clear old class\n\t        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n\t          toggleClasses(el, this.prevActiveClass, removeClass);\n\t        }\n\t        // remove query string before matching\n\t        var dest = this.path.replace(queryStringRE, '');\n\t        path = path.replace(queryStringRE, '');\n\t        // add new class\n\t        if (this.exact) {\n\t          if (dest === path ||\n\t          // also allow additional trailing slash\n\t          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        } else {\n\t          if (this.activeRE && this.activeRE.test(path)) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        this.el.removeEventListener('click', this.handler);\n\t        this.unwatch && this.unwatch();\n\t      }\n\t    });\n\t\n\t    function sameOrigin(link) {\n\t      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n\t    }\n\t\n\t    // this function is copied from v-bind:class implementation until\n\t    // we properly expose it...\n\t    function toggleClasses(el, key, fn) {\n\t      key = key.trim();\n\t      if (key.indexOf(' ') === -1) {\n\t        fn(el, key);\n\t        return;\n\t      }\n\t      var keys = key.split(/\\s+/);\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        fn(el, keys[i]);\n\t      }\n\t    }\n\t  }\n\t\n\t  var historyBackends = {\n\t    abstract: AbstractHistory,\n\t    hash: HashHistory,\n\t    html5: HTML5History\n\t  };\n\t\n\t  // late bind during install\n\t  var Vue = undefined;\n\t\n\t  /**\n\t   * Router constructor\n\t   *\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  var Router = (function () {\n\t    function Router() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$hashbang = _ref.hashbang;\n\t      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n\t      var _ref$abstract = _ref.abstract;\n\t      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n\t      var _ref$history = _ref.history;\n\t      var history = _ref$history === undefined ? false : _ref$history;\n\t      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n\t      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n\t      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n\t      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n\t      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n\t      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n\t      var _ref$root = _ref.root;\n\t      var root = _ref$root === undefined ? null : _ref$root;\n\t      var _ref$linkActiveClass = _ref.linkActiveClass;\n\t      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n\t      babelHelpers.classCallCheck(this, Router);\n\t\n\t      /* istanbul ignore if */\n\t      if (!Router.installed) {\n\t        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n\t      }\n\t\n\t      // Vue instances\n\t      this.app = null;\n\t      this._children = [];\n\t\n\t      // route recognizer\n\t      this._recognizer = new RouteRecognizer();\n\t      this._guardRecognizer = new RouteRecognizer();\n\t\n\t      // state\n\t      this._started = false;\n\t      this._startCb = null;\n\t      this._currentRoute = {};\n\t      this._currentTransition = null;\n\t      this._previousTransition = null;\n\t      this._notFoundHandler = null;\n\t      this._notFoundRedirect = null;\n\t      this._beforeEachHooks = [];\n\t      this._afterEachHooks = [];\n\t\n\t      // trigger transition on initial render?\n\t      this._rendered = false;\n\t      this._transitionOnLoad = transitionOnLoad;\n\t\n\t      // history mode\n\t      this._root = root;\n\t      this._abstract = abstract;\n\t      this._hashbang = hashbang;\n\t\n\t      // check if HTML5 history is available\n\t      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n\t      this._history = history && hasPushState;\n\t      this._historyFallback = history && !hasPushState;\n\t\n\t      // create history object\n\t      var inBrowser = Vue.util.inBrowser;\n\t      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\t\n\t      var History = historyBackends[this.mode];\n\t      this.history = new History({\n\t        root: root,\n\t        hashbang: this._hashbang,\n\t        onChange: function onChange(path, state, anchor) {\n\t          _this._match(path, state, anchor);\n\t        }\n\t      });\n\t\n\t      // other options\n\t      this._saveScrollPosition = saveScrollPosition;\n\t      this._linkActiveClass = linkActiveClass;\n\t      this._suppress = suppressTransitionError;\n\t    }\n\t\n\t    /**\n\t     * Allow directly passing components to a route\n\t     * definition.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} handler\n\t     */\n\t\n\t    // API ===================================================\n\t\n\t    /**\n\t    * Register a map of top-level paths.\n\t    *\n\t    * @param {Object} map\n\t    */\n\t\n\t    Router.prototype.map = function map(_map) {\n\t      for (var route in _map) {\n\t        this.on(route, _map[route]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Register a single root-level path\n\t     *\n\t     * @param {String} rootPath\n\t     * @param {Object} handler\n\t     *                 - {String} component\n\t     *                 - {Object} [subRoutes]\n\t     *                 - {Boolean} [forceRefresh]\n\t     *                 - {Function} [before]\n\t     *                 - {Function} [after]\n\t     */\n\t\n\t    Router.prototype.on = function on(rootPath, handler) {\n\t      if (rootPath === '*') {\n\t        this._notFound(handler);\n\t      } else {\n\t        this._addRoute(rootPath, handler, []);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set redirects.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.redirect = function redirect(map) {\n\t      for (var path in map) {\n\t        this._addRedirect(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set aliases.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.alias = function alias(map) {\n\t      for (var path in map) {\n\t        this._addAlias(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global before hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.beforeEach = function beforeEach(fn) {\n\t      this._beforeEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global after hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.afterEach = function afterEach(fn) {\n\t      this._afterEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Navigate to a given path.\n\t     * The path can be an object describing a named path in\n\t     * the format of { name: '...', params: {}, query: {}}\n\t     * The path is assumed to be already decoded, and will\n\t     * be resolved against root (if provided)\n\t     *\n\t     * @param {String|Object} path\n\t     * @param {Boolean} [replace]\n\t     */\n\t\n\t    Router.prototype.go = function go(path) {\n\t      var replace = false;\n\t      var append = false;\n\t      if (Vue.util.isObject(path)) {\n\t        replace = path.replace;\n\t        append = path.append;\n\t      }\n\t      path = this.stringifyPath(path);\n\t      if (path) {\n\t        this.history.go(path, replace, append);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Short hand for replacing current path\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    Router.prototype.replace = function replace(path) {\n\t      if (typeof path === 'string') {\n\t        path = { path: path };\n\t      }\n\t      path.replace = true;\n\t      this.go(path);\n\t    };\n\t\n\t    /**\n\t     * Start the router.\n\t     *\n\t     * @param {VueConstructor} App\n\t     * @param {String|Element} container\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    Router.prototype.start = function start(App, container, cb) {\n\t      /* istanbul ignore if */\n\t      if (this._started) {\n\t        warn$1('already started.');\n\t        return;\n\t      }\n\t      this._started = true;\n\t      this._startCb = cb;\n\t      if (!this.app) {\n\t        /* istanbul ignore if */\n\t        if (!App || !container) {\n\t          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n\t        }\n\t        /* istanbul ignore if */\n\t        if (App instanceof Vue) {\n\t          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n\t        }\n\t        this._appContainer = container;\n\t        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n\t        // give it a name for better debugging\n\t        Ctor.options.name = Ctor.options.name || 'RouterApp';\n\t      }\n\t\n\t      // handle history fallback in browsers that do not\n\t      // support HTML5 history API\n\t      if (this._historyFallback) {\n\t        var _location = window.location;\n\t        var _history = new HTML5History({ root: this._root });\n\t        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n\t        if (path && path !== '/') {\n\t          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n\t          return;\n\t        }\n\t      }\n\t\n\t      this.history.start();\n\t    };\n\t\n\t    /**\n\t     * Stop listening to route changes.\n\t     */\n\t\n\t    Router.prototype.stop = function stop() {\n\t      this.history.stop();\n\t      this._started = false;\n\t    };\n\t\n\t    /**\n\t     * Normalize named route object / string paths into\n\t     * a string.\n\t     *\n\t     * @param {Object|String|Number} path\n\t     * @return {String}\n\t     */\n\t\n\t    Router.prototype.stringifyPath = function stringifyPath(path) {\n\t      var generatedPath = '';\n\t      if (path && typeof path === 'object') {\n\t        if (path.name) {\n\t          var extend = Vue.util.extend;\n\t          var currentParams = this._currentTransition && this._currentTransition.to.params;\n\t          var targetParams = path.params || {};\n\t          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n\t          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n\t        } else if (path.path) {\n\t          generatedPath = encodeURI(path.path);\n\t        }\n\t        if (path.query) {\n\t          // note: the generated query string is pre-URL-encoded by the recognizer\n\t          var query = this._recognizer.generateQueryString(path.query);\n\t          if (generatedPath.indexOf('?') > -1) {\n\t            generatedPath += '&' + query.slice(1);\n\t          } else {\n\t            generatedPath += query;\n\t          }\n\t        }\n\t      } else {\n\t        generatedPath = encodeURI(path ? path + '' : '');\n\t      }\n\t      return generatedPath;\n\t    };\n\t\n\t    // Internal methods ======================================\n\t\n\t    /**\n\t    * Add a route containing a list of segments to the internal\n\t    * route recognizer. Will be called recursively to add all\n\t    * possible sub-routes.\n\t    *\n\t    * @param {String} path\n\t    * @param {Object} handler\n\t    * @param {Array} segments\n\t    */\n\t\n\t    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n\t      guardComponent(path, handler);\n\t      handler.path = path;\n\t      handler.fullPath = (segments.reduce(function (path, segment) {\n\t        return path + segment.path;\n\t      }, '') + path).replace('//', '/');\n\t      segments.push({\n\t        path: path,\n\t        handler: handler\n\t      });\n\t      this._recognizer.add(segments, {\n\t        as: handler.name\n\t      });\n\t      // add sub routes\n\t      if (handler.subRoutes) {\n\t        for (var subPath in handler.subRoutes) {\n\t          // recursively walk all sub routes\n\t          this._addRoute(subPath, handler.subRoutes[subPath],\n\t          // pass a copy in recursion to avoid mutating\n\t          // across branches\n\t          segments.slice());\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Set the notFound route handler.\n\t     *\n\t     * @param {Object} handler\n\t     */\n\t\n\t    Router.prototype._notFound = function _notFound(handler) {\n\t      guardComponent('*', handler);\n\t      this._notFoundHandler = [{ handler: handler }];\n\t    };\n\t\n\t    /**\n\t     * Add a redirect record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} redirectPath\n\t     */\n\t\n\t    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n\t      if (path === '*') {\n\t        this._notFoundRedirect = redirectPath;\n\t      } else {\n\t        this._addGuard(path, redirectPath, this.replace);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Add an alias record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} aliasPath\n\t     */\n\t\n\t    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n\t      this._addGuard(path, aliasPath, this._match);\n\t    };\n\t\n\t    /**\n\t     * Add a path guard.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} mappedPath\n\t     * @param {Function} handler\n\t     */\n\t\n\t    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n\t      var _this2 = this;\n\t\n\t      this._guardRecognizer.add([{\n\t        path: path,\n\t        handler: function handler(match, query) {\n\t          var realPath = mapParams(mappedPath, match.params, query);\n\t          _handler.call(_this2, realPath);\n\t        }\n\t      }]);\n\t    };\n\t\n\t    /**\n\t     * Check if a path matches any redirect records.\n\t     *\n\t     * @param {String} path\n\t     * @return {Boolean} - if true, will skip normal match.\n\t     */\n\t\n\t    Router.prototype._checkGuard = function _checkGuard(path) {\n\t      var matched = this._guardRecognizer.recognize(path, true);\n\t      if (matched) {\n\t        matched[0].handler(matched[0], matched.queryParams);\n\t        return true;\n\t      } else if (this._notFoundRedirect) {\n\t        matched = this._recognizer.recognize(path);\n\t        if (!matched) {\n\t          this.replace(this._notFoundRedirect);\n\t          return true;\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Match a URL path and set the route context on vm,\n\t     * triggering view updates.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._match = function _match(path, state, anchor) {\n\t      var _this3 = this;\n\t\n\t      if (this._checkGuard(path)) {\n\t        return;\n\t      }\n\t\n\t      var currentRoute = this._currentRoute;\n\t      var currentTransition = this._currentTransition;\n\t\n\t      if (currentTransition) {\n\t        if (currentTransition.to.path === path) {\n\t          // do nothing if we have an active transition going to the same path\n\t          return;\n\t        } else if (currentRoute.path === path) {\n\t          // We are going to the same path, but we also have an ongoing but\n\t          // not-yet-validated transition. Abort that transition and reset to\n\t          // prev transition.\n\t          currentTransition.aborted = true;\n\t          this._currentTransition = this._prevTransition;\n\t          return;\n\t        } else {\n\t          // going to a totally different path. abort ongoing transition.\n\t          currentTransition.aborted = true;\n\t        }\n\t      }\n\t\n\t      // construct new route and transition context\n\t      var route = new Route(path, this);\n\t      var transition = new RouteTransition(this, route, currentRoute);\n\t\n\t      // current transition is updated right now.\n\t      // however, current route will only be updated after the transition has\n\t      // been validated.\n\t      this._prevTransition = currentTransition;\n\t      this._currentTransition = transition;\n\t\n\t      if (!this.app) {\n\t        (function () {\n\t          // initial render\n\t          var router = _this3;\n\t          _this3.app = new _this3._appConstructor({\n\t            el: _this3._appContainer,\n\t            created: function created() {\n\t              this.$router = router;\n\t            },\n\t            _meta: {\n\t              $route: route\n\t            }\n\t          });\n\t        })();\n\t      }\n\t\n\t      // check global before hook\n\t      var beforeHooks = this._beforeEachHooks;\n\t      var startTransition = function startTransition() {\n\t        transition.start(function () {\n\t          _this3._postTransition(route, state, anchor);\n\t        });\n\t      };\n\t\n\t      if (beforeHooks.length) {\n\t        transition.runQueue(beforeHooks, function (hook, _, next) {\n\t          if (transition === _this3._currentTransition) {\n\t            transition.callHook(hook, null, next, {\n\t              expectBoolean: true\n\t            });\n\t          }\n\t        }, startTransition);\n\t      } else {\n\t        startTransition();\n\t      }\n\t\n\t      if (!this._rendered && this._startCb) {\n\t        this._startCb.call(null);\n\t      }\n\t\n\t      // HACK:\n\t      // set rendered to true after the transition start, so\n\t      // that components that are acitvated synchronously know\n\t      // whether it is the initial render.\n\t      this._rendered = true;\n\t    };\n\t\n\t    /**\n\t     * Set current to the new transition.\n\t     * This is called by the transition object when the\n\t     * validation of a route has succeeded.\n\t     *\n\t     * @param {Transition} transition\n\t     */\n\t\n\t    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n\t      // set current route\n\t      var route = this._currentRoute = transition.to;\n\t      // update route context for all children\n\t      if (this.app.$route !== route) {\n\t        this.app.$route = route;\n\t        this._children.forEach(function (child) {\n\t          child.$route = route;\n\t        });\n\t      }\n\t      // call global after hook\n\t      if (this._afterEachHooks.length) {\n\t        this._afterEachHooks.forEach(function (hook) {\n\t          return hook.call(null, {\n\t            to: transition.to,\n\t            from: transition.from\n\t          });\n\t        });\n\t      }\n\t      this._currentTransition.done = true;\n\t    };\n\t\n\t    /**\n\t     * Handle stuff after the transition.\n\t     *\n\t     * @param {Route} route\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n\t      // handle scroll positions\n\t      // saved scroll positions take priority\n\t      // then we check if the path has an anchor\n\t      var pos = state && state.pos;\n\t      if (pos && this._saveScrollPosition) {\n\t        Vue.nextTick(function () {\n\t          window.scrollTo(pos.x, pos.y);\n\t        });\n\t      } else if (anchor) {\n\t        Vue.nextTick(function () {\n\t          var el = document.getElementById(anchor.slice(1));\n\t          if (el) {\n\t            window.scrollTo(window.scrollX, el.offsetTop);\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    return Router;\n\t  })();\n\t\n\t  function guardComponent(path, handler) {\n\t    var comp = handler.component;\n\t    if (Vue.util.isPlainObject(comp)) {\n\t      comp = handler.component = Vue.extend(comp);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (typeof comp !== 'function') {\n\t      handler.component = null;\n\t      warn$1('invalid component for route \"' + path + '\".');\n\t    }\n\t  }\n\t\n\t  /* Installation */\n\t\n\t  Router.installed = false;\n\t\n\t  /**\n\t   * Installation interface.\n\t   * Install the necessary directives.\n\t   */\n\t\n\t  Router.install = function (externalVue) {\n\t    /* istanbul ignore if */\n\t    if (Router.installed) {\n\t      warn$1('already installed.');\n\t      return;\n\t    }\n\t    Vue = externalVue;\n\t    applyOverride(Vue);\n\t    View(Vue);\n\t    Link(Vue);\n\t    exports$1.Vue = Vue;\n\t    Router.installed = true;\n\t  };\n\t\n\t  // auto install\n\t  /* istanbul ignore if */\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(Router);\n\t  }\n\t\n\t  return Router;\n\t\n\t}));\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** static/js/app.96e6f8da5fb6905004d0.js\n **/","import Vue from 'vue'\nimport App from './App'\nimport Router from 'vue-router'\nimport pagenav from './components/nav'\nimport hello from './components/Hello'\nimport ButtonView from './components/ButtonView'\n/* eslint-disable no-new */\n// install router\nVue.use(Router)\n\n// register filters globally\n\n// routing\nvar router = new Router()\nrouter.map({\n  '/': {\n    component: hello\n  },\n  '/button': {\n    component: ButtonView\n  },\n  // '/dialog': {\n  //   component: DialogView\n  // },\n  // '/actionsheet': {\n  //   component: ActionSheet\n  // },\n  // '/msg': {\n  //   component: MsgView\n  // },\n  // '/article': {\n  //   component: ArticleView\n  // },\n  // '/cell': {\n  //   component: CellView\n  // },\n  // '/progress': {\n  //   component: ProgressView\n  // },\n  // '/icons': {\n  //   component: IconsView\n  // }\n})\n\nrouter.redirect({\n  '*': '/'\n})\nrouter.start(App, '#app')\n// new Vue({\n//   el: 'body',\n//   components: { App }\n// })\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-9e18c704&scoped=true!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./nav.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./nav.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/template-rewriter.js?id=_v-9e18c704!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./nav.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/nav.vue\n ** module id = 1\n ** module chunks = 1\n **/","<template>\n  <div transition=\"app\">\n    <div class=\"clearfix pageleft\">\n        <pagenav></pagenav>\n    </div>\n    <div class=\"pageright\" id='pagecontent'>\n         <router-view></router-view>\n    </div>\n  </div>\n</template>\n\n<script>\nimport pagenav from './components/nav'\n// var Components = {\n//   pagenav\n// }\n// module.exports = Components\nexport default {\n  components:{pagenav}\n}\n// export default {\n//   components:{hello}\n// }\n// export default {\n//   components:{pagenav}\n// }\n</script>\n\n<style>\n#app{\n    min-height: 1000px;\n}\n.pageleft{\n    width: 200px;\n    position: fixed;\n    top: 0;\n    left: 0px;\n    overflow-x: hidden;\n    overflow-y: auto;\n    padding:20px;\n    background-color: #013A77;\n    min-height: 1000px;\n}\n.pageright{\n    margin-left: 240px;\n    background:url('assets/bg.jpg') repeat-y;\n    min-height: 1000px;\n    background-size: cover;\n}\n.nav{\n    color: #fff;\n}\n.nav .cat1{\n    font-size: 25px;\n    font-weight: bold;\n\n}\n.nav .cat2 a{\n    display: inline-block;\n    padding-top: 15px;\n    font-size: 18px;\n    color: #fff;\n}\n.nav .cat2 a:hover{\n   text-decoration: underline;\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** App.vue?0cc72d0c\n **/","<template>\n   <div class=\"wrap\">\n        <article class=\"clearfix\">\n            <h2>Button &lta&gt</h2>\n            <div class=\"section fl\">\n                <a href=\"javascript:void(0)\" class=\"btn btn-class1\">button</a>\n            </div>\n            <div class=\"section fl\">\n                <a href=\"javascript:void(0)\" class=\"btn btn-disabled\">Disabled button</a>\n            </div>\n        </article>\n        <article class=\"clearfix\">\n            <h2>Button &ltbutton&gt</h2>\n            <div class=\"section fl\">\n                <button class=\"button btn-class1\">button</button>\n            </div>\n            <div class=\"section fl\">\n                <button class=\"button btn-disabled\" disabled=\"disabled\">Disabled button</button>\n            </div>\n        </article>\n        <article class=\"clearfix\">\n            <h2>Other (use tag a)</h2>\n            <div class=\"section fl\">\n                <i class=\"iconfont\">&#xe65a;</i>\n                <a href=\"javascript:void(0)\" class=\"btn btn-class1\">button</a>\n            </div>\n        </article>\n   </div>\n</template>\n\n<script>\nexport default {\n    data () {\n    return {\n      // note: changing this line won't causes changes\n      // with hot-reload because the reloaded component\n      // preserves its current state and we are modifying\n      // its initial state.\n      msg:'button widget'\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"sass\" scoped>\n@import \"./style/widget/button.scss\";\n@import \"../assets/font/iconfont.css\";\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** ButtonView.vue?57e2efdc\n **/","<template>\n    <img src=\"../assets/logo.png\" width=\"499\" height=\"100\">\n    <h1>There are some components that I collected .</h1>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      // note: changing this line won't causes changes\n      // with hot-reload because the reloaded component\n      // preserves its current state and we are modifying\n      // its initial state.\n      msg:'a'\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"sass\" scoped>\n@import \"./style/hello.scss\";\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** Hello.vue?61c15444\n **/","<template>\n    <ul class=\"nav\">\n        <li v-for=\"item in navMsg\" class=\"cat1\">\n            {{item.category}}\n            <ul>\n                <li v-for=\"item in item.cates\" class=\"cat2\">\n                   <a v-link=\"{path: '/'+item.url}\">{{item.name}}</a>\n                </li>\n            </ul>\n        </li>\n    </ul>\n</template>\n\n<script>\nexport default {\n    data () {\n    return {\n      // note: changing this line won't causes changes\n      // with hot-reload because the reloaded component\n      // preserves its current state and we are modifying\n      // its initial state.\n      navMsg: [\n        {\n            category:'pc',\n            cates:[{\n                name:'button',\n                url:'button'\n            },{\n                name:'类别2',\n                url:'aa'\n            },{\n                name:'类别3',\n                url:'aa'\n            }]\n          },{\n            category:'m',\n            cates:[{\n                name:'类别1',\n                url:'aa'\n            },{\n                name:'类别2',\n                url:'aa'\n            },{\n                name:'类别3',\n                url:'aa'\n            }]\n          }\n      ]\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh1 {\n  color: #42b983;\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** nav.vue?41a18542\n **/","module.exports = __webpack_public_path__ + \"static/img/logo.0374887.png\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/assets/logo.png\n ** module id = 11\n ** module chunks = 1\n **/","module.exports = \"<div transition=app> <div class=\\\"clearfix pageleft\\\"> <pagenav></pagenav> </div> <div class=pageright id=pagecontent> <router-view></router-view> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n ** module id = 12\n ** module chunks = 1\n **/","module.exports = \"<img src=\" + require(\"../assets/logo.png\") + \" width=499 height=100 _v-382637cd=\\\"\\\"> <h1 _v-382637cd=\\\"\\\">There are some components that I collected .</h1>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-382637cd!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Hello.vue\n ** module id = 13\n ** module chunks = 1\n **/","module.exports = \"<div class=wrap _v-4a750c8c=\\\"\\\"> <article class=clearfix _v-4a750c8c=\\\"\\\"> <h2 _v-4a750c8c=\\\"\\\">Button &lt;a&gt;</h2> <div class=\\\"section fl\\\" _v-4a750c8c=\\\"\\\"> <a href=javascript:void(0) class=\\\"btn btn-class1\\\" _v-4a750c8c=\\\"\\\">button</a> </div> <div class=\\\"section fl\\\" _v-4a750c8c=\\\"\\\"> <a href=javascript:void(0) class=\\\"btn btn-disabled\\\" _v-4a750c8c=\\\"\\\">Disabled button</a> </div> </article> <article class=clearfix _v-4a750c8c=\\\"\\\"> <h2 _v-4a750c8c=\\\"\\\">Button &lt;button&gt;</h2> <div class=\\\"section fl\\\" _v-4a750c8c=\\\"\\\"> <button class=\\\"button btn-class1\\\" _v-4a750c8c=\\\"\\\">button</button> </div> <div class=\\\"section fl\\\" _v-4a750c8c=\\\"\\\"> <button class=\\\"button btn-disabled\\\" disabled=disabled _v-4a750c8c=\\\"\\\">Disabled button</button> </div> </article> <article class=clearfix _v-4a750c8c=\\\"\\\"> <h2 _v-4a750c8c=\\\"\\\">Other (use tag a)</h2> <div class=\\\"section fl\\\" _v-4a750c8c=\\\"\\\"> <i class=iconfont _v-4a750c8c=\\\"\\\"></i> <a href=javascript:void(0) class=\\\"btn btn-class1\\\" _v-4a750c8c=\\\"\\\">button</a> </div> </article> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-4a750c8c!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/ButtonView.vue\n ** module id = 14\n ** module chunks = 1\n **/","module.exports = \"<ul class=nav _v-9e18c704=\\\"\\\"> <li v-for=\\\"item in navMsg\\\" class=cat1 _v-9e18c704=\\\"\\\"> {{item.category}} <ul _v-9e18c704=\\\"\\\"> <li v-for=\\\"item in item.cates\\\" class=cat2 _v-9e18c704=\\\"\\\"> <a v-link=\\\"{path: '/'+item.url}\\\" _v-9e18c704=\\\"\\\">{{item.name}}</a> </li> </ul> </li> </ul>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-9e18c704!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/nav.vue\n ** module id = 15\n ** module chunks = 1\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./App.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./App.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/App.vue\n ** module id = 16\n ** module chunks = 1\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-4a750c8c&scoped=true!sass-loader?indentedSyntax&sourceMap!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./ButtonView.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./ButtonView.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/template-rewriter.js?id=_v-4a750c8c!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./ButtonView.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/ButtonView.vue\n ** module id = 17\n ** module chunks = 1\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-382637cd&scoped=true!sass-loader?indentedSyntax&sourceMap!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Hello.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Hello.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/template-rewriter.js?id=_v-382637cd!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Hello.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Hello.vue\n ** module id = 18\n ** module chunks = 1\n **/","/*!\n * vue-router v0.7.13\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.VueRouter = factory();\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n  }\n\n  Target.prototype = {\n    to: function to(target, callback) {\n      var delegate = this.delegate;\n\n      if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n      }\n\n      this.matcher.add(this.path, target);\n\n      if (callback) {\n        if (callback.length === 0) {\n          throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n      }\n      return this;\n    }\n  };\n\n  function Matcher(target) {\n    this.routes = {};\n    this.children = {};\n    this.target = target;\n  }\n\n  Matcher.prototype = {\n    add: function add(path, handler) {\n      this.routes[path] = handler;\n    },\n\n    addChild: function addChild(path, target, callback, delegate) {\n      var matcher = new Matcher(target);\n      this.children[path] = matcher;\n\n      var match = generateMatch(path, matcher, delegate);\n\n      if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n      }\n\n      callback(match);\n    }\n  };\n\n  function generateMatch(startingPath, matcher, delegate) {\n    return function (path, nestedCallback) {\n      var fullPath = startingPath + path;\n\n      if (nestedCallback) {\n        nestedCallback(generateMatch(fullPath, matcher, delegate));\n      } else {\n        return new Target(startingPath + path, matcher, delegate);\n      }\n    };\n  }\n\n  function addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0, l = routeArray.length; i < l; i++) {\n      len += routeArray[i].path.length;\n    }\n\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n  }\n\n  function eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n\n    for (var path in routes) {\n      if (routes.hasOwnProperty(path)) {\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n\n        if (matcher.children[path]) {\n          eachRoute(routeArray, matcher.children[path], callback, binding);\n        } else {\n          callback.call(binding, routeArray);\n        }\n      }\n    }\n  }\n\n  function map (callback, addRouteCallback) {\n    var matcher = new Matcher();\n\n    callback(generateMatch(\"\", matcher, this.delegate));\n\n    eachRoute([], matcher, function (route) {\n      if (addRouteCallback) {\n        addRouteCallback(this, route);\n      } else {\n        this.add(route);\n      }\n    }, this);\n  }\n\n  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\n  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\n  var noWarning = false;\n  function warn(msg) {\n    if (!noWarning && typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  function tryDecode(uri, asComponent) {\n    try {\n      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n    } catch (e) {\n      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n    }\n  }\n\n  function isArray(test) {\n    return Object.prototype.toString.call(test) === \"[object Array]\";\n  }\n\n  // A Segment represents a segment in the original route description.\n  // Each Segment type provides an `eachChar` and `regex` method.\n  //\n  // The `eachChar` method invokes the callback with one or more character\n  // specifications. A character specification consumes one or more input\n  // characters.\n  //\n  // The `regex` method returns a regex fragment for the segment. If the\n  // segment is a dynamic of star segment, the regex fragment also includes\n  // a capture.\n  //\n  // A character specification contains:\n  //\n  // * `validChars`: a String with a list of all valid characters, or\n  // * `invalidChars`: a String with a list of all invalid characters\n  // * `repeat`: true if the character specification can repeat\n\n  function StaticSegment(string) {\n    this.string = string;\n  }\n  StaticSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      var string = this.string,\n          ch;\n\n      for (var i = 0, l = string.length; i < l; i++) {\n        ch = string.charAt(i);\n        callback({ validChars: ch });\n      }\n    },\n\n    regex: function regex() {\n      return this.string.replace(escapeRegex, '\\\\$1');\n    },\n\n    generate: function generate() {\n      return this.string;\n    }\n  };\n\n  function DynamicSegment(name) {\n    this.name = name;\n  }\n  DynamicSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"/\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"([^/]+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function StarSegment(name) {\n    this.name = name;\n  }\n  StarSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"(.+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function EpsilonSegment() {}\n  EpsilonSegment.prototype = {\n    eachChar: function eachChar() {},\n    regex: function regex() {\n      return \"\";\n    },\n    generate: function generate() {\n      return \"\";\n    }\n  };\n\n  function parse(route, names, specificity) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.charAt(0) === \"/\") {\n      route = route.substr(1);\n    }\n\n    var segments = route.split(\"/\"),\n        results = [];\n\n    // A routes has specificity determined by the order that its different segments\n    // appear in. This system mirrors how the magnitude of numbers written as strings\n    // works.\n    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n    // leading symbol, \"1\".\n    // The rule is that symbols to the left carry more weight than symbols to the right\n    // when a number is written out as a string. In the above strings, the leading digit\n    // represents how many 100's are in the number, and it carries more weight than the middle\n    // number which represents how many 10's are in the number.\n    // This system of number magnitude works well for route specificity, too. A route written as\n    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n    // `x`, irrespective of the other parts.\n    // Because of this similarity, we assign each type of segment a number value written as a\n    // string. We can find the specificity of compound routes by concatenating these strings\n    // together, from left to right. After we have looped through all of the segments,\n    // we convert the string to a number.\n    specificity.val = '';\n\n    for (var i = 0, l = segments.length; i < l; i++) {\n      var segment = segments[i],\n          match;\n\n      if (match = segment.match(/^:([^\\/]+)$/)) {\n        results.push(new DynamicSegment(match[1]));\n        names.push(match[1]);\n        specificity.val += '3';\n      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n        results.push(new StarSegment(match[1]));\n        specificity.val += '2';\n        names.push(match[1]);\n      } else if (segment === \"\") {\n        results.push(new EpsilonSegment());\n        specificity.val += '1';\n      } else {\n        results.push(new StaticSegment(segment));\n        specificity.val += '4';\n      }\n    }\n\n    specificity.val = +specificity.val;\n\n    return results;\n  }\n\n  // A State has a character specification and (`charSpec`) and a list of possible\n  // subsequent states (`nextStates`).\n  //\n  // If a State is an accepting state, it will also have several additional\n  // properties:\n  //\n  // * `regex`: A regular expression that is used to extract parameters from paths\n  //   that reached this accepting state.\n  // * `handlers`: Information on how to convert the list of captures into calls\n  //   to registered handlers with the specified parameters\n  // * `types`: How many static, dynamic or star segments in this route. Used to\n  //   decide which route to use if multiple registered routes match a path.\n  //\n  // Currently, State is implemented naively by looping over `nextStates` and\n  // comparing a character specification against a character. A more efficient\n  // implementation would use a hash of keys pointing at one or more next states.\n\n  function State(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  State.prototype = {\n    get: function get(charSpec) {\n      var nextStates = this.nextStates;\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        var child = nextStates[i];\n\n        var isEqual = child.charSpec.validChars === charSpec.validChars;\n        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\n        if (isEqual) {\n          return child;\n        }\n      }\n    },\n\n    put: function put(charSpec) {\n      var state;\n\n      // If the character specification already exists in a child of the current\n      // state, just return that state.\n      if (state = this.get(charSpec)) {\n        return state;\n      }\n\n      // Make a new state for the character spec\n      state = new State(charSpec);\n\n      // Insert the new state as a child of the current state\n      this.nextStates.push(state);\n\n      // If this character specification repeats, insert the new state as a child\n      // of itself. Note that this will not trigger an infinite loop because each\n      // transition during recognition consumes a character.\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n\n      // Return the new state\n      return state;\n    },\n\n    // Find a list of child states matching the next character\n    match: function match(ch) {\n      // DEBUG \"Processing `\" + ch + \"`:\"\n      var nextStates = this.nextStates,\n          child,\n          charSpec,\n          chars;\n\n      // DEBUG \"  \" + debugState(this)\n      var returned = [];\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        child = nextStates[i];\n\n        charSpec = child.charSpec;\n\n        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n          if (chars.indexOf(ch) !== -1) {\n            returned.push(child);\n          }\n        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n          if (chars.indexOf(ch) === -1) {\n            returned.push(child);\n          }\n        }\n      }\n\n      return returned;\n    }\n\n    /** IF DEBUG\n    , debug: function() {\n      var charSpec = this.charSpec,\n          debug = \"[\",\n          chars = charSpec.validChars || charSpec.invalidChars;\n       if (charSpec.invalidChars) { debug += \"^\"; }\n      debug += chars;\n      debug += \"]\";\n       if (charSpec.repeat) { debug += \"+\"; }\n       return debug;\n    }\n    END IF **/\n  };\n\n  /** IF DEBUG\n  function debug(log) {\n    console.log(log);\n  }\n\n  function debugState(state) {\n    return state.nextStates.map(function(n) {\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n    }).join(\", \")\n  }\n  END IF **/\n\n  // Sort the routes by specificity\n  function sortSolutions(states) {\n    return states.sort(function (a, b) {\n      return b.specificity.val - a.specificity.val;\n    });\n  }\n\n  function recognizeChar(states, ch) {\n    var nextStates = [];\n\n    for (var i = 0, l = states.length; i < l; i++) {\n      var state = states[i];\n\n      nextStates = nextStates.concat(state.match(ch));\n    }\n\n    return nextStates;\n  }\n\n  var oCreate = Object.create || function (proto) {\n    function F() {}\n    F.prototype = proto;\n    return new F();\n  };\n\n  function RecognizeResults(queryParams) {\n    this.queryParams = queryParams || {};\n  }\n  RecognizeResults.prototype = oCreate({\n    splice: Array.prototype.splice,\n    slice: Array.prototype.slice,\n    push: Array.prototype.push,\n    length: 0,\n    queryParams: null\n  });\n\n  function findHandler(state, path, queryParams) {\n    var handlers = state.handlers,\n        regex = state.regex;\n    var captures = path.match(regex),\n        currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n\n    for (var i = 0, l = handlers.length; i < l; i++) {\n      var handler = handlers[i],\n          names = handler.names,\n          params = {};\n\n      for (var j = 0, m = names.length; j < m; j++) {\n        params[names[j]] = captures[currentCapture++];\n      }\n\n      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n    }\n\n    return result;\n  }\n\n  function addSegment(currentState, segment) {\n    segment.eachChar(function (ch) {\n      var state;\n\n      currentState = currentState.put(ch);\n    });\n\n    return currentState;\n  }\n\n  function decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, '%20');\n    return tryDecode(part, true);\n  }\n\n  // The main interface\n\n  var RouteRecognizer = function RouteRecognizer() {\n    this.rootState = new State();\n    this.names = {};\n  };\n\n  RouteRecognizer.prototype = {\n    add: function add(routes, options) {\n      var currentState = this.rootState,\n          regex = \"^\",\n          specificity = {},\n          handlers = [],\n          allSegments = [],\n          name;\n\n      var isEmpty = true;\n\n      for (var i = 0, l = routes.length; i < l; i++) {\n        var route = routes[i],\n            names = [];\n\n        var segments = parse(route.path, names, specificity);\n\n        allSegments = allSegments.concat(segments);\n\n        for (var j = 0, m = segments.length; j < m; j++) {\n          var segment = segments[j];\n\n          if (segment instanceof EpsilonSegment) {\n            continue;\n          }\n\n          isEmpty = false;\n\n          // Add a \"/\" for the new segment\n          currentState = currentState.put({ validChars: \"/\" });\n          regex += \"/\";\n\n          // Add a representation of the segment to the NFA and regex\n          currentState = addSegment(currentState, segment);\n          regex += segment.regex();\n        }\n\n        var handler = { handler: route.handler, names: names };\n        handlers.push(handler);\n      }\n\n      if (isEmpty) {\n        currentState = currentState.put({ validChars: \"/\" });\n        regex += \"/\";\n      }\n\n      currentState.handlers = handlers;\n      currentState.regex = new RegExp(regex + \"$\");\n      currentState.specificity = specificity;\n\n      if (name = options && options.as) {\n        this.names[name] = {\n          segments: allSegments,\n          handlers: handlers\n        };\n      }\n    },\n\n    handlersFor: function handlersFor(name) {\n      var route = this.names[name],\n          result = [];\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      for (var i = 0, l = route.handlers.length; i < l; i++) {\n        result.push(route.handlers[i]);\n      }\n\n      return result;\n    },\n\n    hasRoute: function hasRoute(name) {\n      return !!this.names[name];\n    },\n\n    generate: function generate(name, params) {\n      var route = this.names[name],\n          output = \"\";\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      var segments = route.segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i];\n\n        if (segment instanceof EpsilonSegment) {\n          continue;\n        }\n\n        output += \"/\";\n        output += segment.generate(params);\n      }\n\n      if (output.charAt(0) !== '/') {\n        output = '/' + output;\n      }\n\n      if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n      }\n\n      return output;\n    },\n\n    generateQueryString: function generateQueryString(params) {\n      var pairs = [];\n      var keys = [];\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      keys.sort();\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        var value = params[key];\n        if (value == null) {\n          continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n          for (var j = 0, l = value.length; j < l; j++) {\n            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n            pairs.push(arrayPair);\n          }\n        } else {\n          pair += \"=\" + encodeURIComponent(value);\n          pairs.push(pair);\n        }\n      }\n\n      if (pairs.length === 0) {\n        return '';\n      }\n\n      return \"?\" + pairs.join(\"&\");\n    },\n\n    parseQueryString: function parseQueryString(queryString) {\n      var pairs = queryString.split(\"&\"),\n          queryParams = {};\n      for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('='),\n            key = decodeQueryParamPart(pair[0]),\n            keyLength = key.length,\n            isArray = false,\n            value;\n        if (pair.length === 1) {\n          value = 'true';\n        } else {\n          //Handle arrays\n          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n            isArray = true;\n            key = key.slice(0, keyLength - 2);\n            if (!queryParams[key]) {\n              queryParams[key] = [];\n            }\n          }\n          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n        }\n        if (isArray) {\n          queryParams[key].push(value);\n        } else {\n          queryParams[key] = value;\n        }\n      }\n      return queryParams;\n    },\n\n    recognize: function recognize(path, silent) {\n      noWarning = silent;\n      var states = [this.rootState],\n          pathLen,\n          i,\n          l,\n          queryStart,\n          queryParams = {},\n          isSlashDropped = false;\n\n      queryStart = path.indexOf('?');\n      if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        if (queryString) {\n          queryParams = this.parseQueryString(queryString);\n        }\n      }\n\n      path = tryDecode(path);\n      if (!path) return;\n\n      // DEBUG GROUP path\n\n      if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n      }\n\n      pathLen = path.length;\n      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        isSlashDropped = true;\n      }\n\n      for (i = 0, l = path.length; i < l; i++) {\n        states = recognizeChar(states, path.charAt(i));\n        if (!states.length) {\n          break;\n        }\n      }\n\n      // END DEBUG GROUP\n\n      var solutions = [];\n      for (i = 0, l = states.length; i < l; i++) {\n        if (states[i].handlers) {\n          solutions.push(states[i]);\n        }\n      }\n\n      states = sortSolutions(solutions);\n\n      var state = solutions[0];\n\n      if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n          path = path + \"/\";\n        }\n        return findHandler(state, path, queryParams);\n      }\n    }\n  };\n\n  RouteRecognizer.prototype.map = map;\n\n  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * Warn stuff.\n   *\n   * @param {String} msg\n   */\n\n  function warn$1(msg) {\n    /* istanbul ignore next */\n    if (typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  /**\n   * Resolve a relative path.\n   *\n   * @param {String} base\n   * @param {String} relative\n   * @param {Boolean} append\n   * @return {String}\n   */\n\n  function resolvePath(base, relative, append) {\n    var query = base.match(/(\\?.*)$/);\n    if (query) {\n      query = query[1];\n      base = base.slice(0, -query.length);\n    }\n    // a query!\n    if (relative.charAt(0) === '?') {\n      return base + relative;\n    }\n    var stack = base.split('/');\n    // remove trailing segment if:\n    // - not appending\n    // - appending to trailing slash (last segment is empty)\n    if (!append || !stack[stack.length - 1]) {\n      stack.pop();\n    }\n    // resolve relative path\n    var segments = relative.replace(/^\\//, '').split('/');\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      if (segment === '.') {\n        continue;\n      } else if (segment === '..') {\n        stack.pop();\n      } else {\n        stack.push(segment);\n      }\n    }\n    // ensure leading slash\n    if (stack[0] !== '') {\n      stack.unshift('');\n    }\n    return stack.join('/');\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Retrive a route config field from a component instance\n   * OR a component contructor.\n   *\n   * @param {Function|Vue} component\n   * @param {String} name\n   * @return {*}\n   */\n\n  function getRouteConfig(component, name) {\n    var options = component && (component.$options || component.options);\n    return options && options.route && options.route[name];\n  }\n\n  /**\n   * Resolve an async component factory. Have to do a dirty\n   * mock here because of Vue core's internal API depends on\n   * an ID check.\n   *\n   * @param {Object} handler\n   * @param {Function} cb\n   */\n\n  var resolver = undefined;\n\n  function resolveAsyncComponent(handler, cb) {\n    if (!resolver) {\n      resolver = {\n        resolve: exports$1.Vue.prototype._resolveComponent,\n        $options: {\n          components: {\n            _: handler.component\n          }\n        }\n      };\n    } else {\n      resolver.$options.components._ = handler.component;\n    }\n    resolver.resolve('_', function (Component) {\n      handler.component = Component;\n      cb(Component);\n    });\n  }\n\n  /**\n   * Map the dynamic segments in a path to params.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n  function mapParams(path, params, query) {\n    if (params === undefined) params = {};\n\n    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n      var val = params[key];\n      /* istanbul ignore if */\n      if (!val) {\n        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n      }\n      return val || '';\n    });\n    if (query) {\n      path += genQuery(query);\n    }\n    return path;\n  }\n\n  var hashRE = /#.*$/;\n\n  var HTML5History = (function () {\n    function HTML5History(_ref) {\n      var root = _ref.root;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HTML5History);\n\n      if (root && root !== '/') {\n        // make sure there's the starting slash\n        if (root.charAt(0) !== '/') {\n          root = '/' + root;\n        }\n        // remove trailing slash\n        this.root = root.replace(/\\/$/, '');\n        this.rootRE = new RegExp('^\\\\' + this.root);\n      } else {\n        this.root = null;\n      }\n      this.onChange = onChange;\n      // check base tag\n      var baseEl = document.querySelector('base');\n      this.base = baseEl && baseEl.getAttribute('href');\n    }\n\n    HTML5History.prototype.start = function start() {\n      var _this = this;\n\n      this.listener = function (e) {\n        var url = location.pathname + location.search;\n        if (_this.root) {\n          url = url.replace(_this.rootRE, '');\n        }\n        _this.onChange(url, e && e.state, location.hash);\n      };\n      window.addEventListener('popstate', this.listener);\n      this.listener();\n    };\n\n    HTML5History.prototype.stop = function stop() {\n      window.removeEventListener('popstate', this.listener);\n    };\n\n    HTML5History.prototype.go = function go(path, replace, append) {\n      var url = this.formatPath(path, append);\n      if (replace) {\n        history.replaceState({}, '', url);\n      } else {\n        // record scroll position by replacing current state\n        history.replaceState({\n          pos: {\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          }\n        }, '', location.href);\n        // then push new state\n        history.pushState({}, '', url);\n      }\n      var hashMatch = path.match(hashRE);\n      var hash = hashMatch && hashMatch[0];\n      path = url\n      // strip hash so it doesn't mess up params\n      .replace(hashRE, '')\n      // remove root before matching\n      .replace(this.rootRE, '');\n      this.onChange(path, null, hash);\n    };\n\n    HTML5History.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/'\n      // absolute path\n      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n    };\n\n    return HTML5History;\n  })();\n\n  var HashHistory = (function () {\n    function HashHistory(_ref) {\n      var hashbang = _ref.hashbang;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HashHistory);\n\n      this.hashbang = hashbang;\n      this.onChange = onChange;\n    }\n\n    HashHistory.prototype.start = function start() {\n      var self = this;\n      this.listener = function () {\n        var path = location.hash;\n        var raw = path.replace(/^#!?/, '');\n        // always\n        if (raw.charAt(0) !== '/') {\n          raw = '/' + raw;\n        }\n        var formattedPath = self.formatPath(raw);\n        if (formattedPath !== path) {\n          location.replace(formattedPath);\n          return;\n        }\n        // determine query\n        // note it's possible to have queries in both the actual URL\n        // and the hash fragment itself.\n        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n        self.onChange(path.replace(/^#!?/, '') + query);\n      };\n      window.addEventListener('hashchange', this.listener);\n      this.listener();\n    };\n\n    HashHistory.prototype.stop = function stop() {\n      window.removeEventListener('hashchange', this.listener);\n    };\n\n    HashHistory.prototype.go = function go(path, replace, append) {\n      path = this.formatPath(path, append);\n      if (replace) {\n        location.replace(path);\n      } else {\n        location.hash = path;\n      }\n    };\n\n    HashHistory.prototype.formatPath = function formatPath(path, append) {\n      var isAbsoloute = path.charAt(0) === '/';\n      var prefix = '#' + (this.hashbang ? '!' : '');\n      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n    };\n\n    return HashHistory;\n  })();\n\n  var AbstractHistory = (function () {\n    function AbstractHistory(_ref) {\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, AbstractHistory);\n\n      this.onChange = onChange;\n      this.currentPath = '/';\n    }\n\n    AbstractHistory.prototype.start = function start() {\n      this.onChange('/');\n    };\n\n    AbstractHistory.prototype.stop = function stop() {\n      // noop\n    };\n\n    AbstractHistory.prototype.go = function go(path, replace, append) {\n      path = this.currentPath = this.formatPath(path, append);\n      this.onChange(path);\n    };\n\n    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n    };\n\n    return AbstractHistory;\n  })();\n\n  /**\n   * Determine the reusability of an existing router view.\n   *\n   * @param {Directive} view\n   * @param {Object} handler\n   * @param {Transition} transition\n   */\n\n  function canReuse(view, handler, transition) {\n    var component = view.childVM;\n    if (!component || !handler) {\n      return false;\n    }\n    // important: check view.Component here because it may\n    // have been changed in activate hook\n    if (view.Component !== handler.component) {\n      return false;\n    }\n    var canReuseFn = getRouteConfig(component, 'canReuse');\n    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n      to: transition.to,\n      from: transition.from\n    }) : true; // defaults to true\n  }\n\n  /**\n   * Check if a component can deactivate.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canDeactivate(view, transition, next) {\n    var fromComponent = view.childVM;\n    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHook(hook, fromComponent, next, {\n        expectBoolean: true\n      });\n    }\n  }\n\n  /**\n   * Check if a component can activate.\n   *\n   * @param {Object} handler\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canActivate(handler, transition, next) {\n    resolveAsyncComponent(handler, function (Component) {\n      // have to check due to async-ness\n      if (transition.aborted) {\n        return;\n      }\n      // determine if this component can be activated\n      var hook = getRouteConfig(Component, 'canActivate');\n      if (!hook) {\n        next();\n      } else {\n        transition.callHook(hook, null, next, {\n          expectBoolean: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Call deactivate hooks for existing router-views.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function deactivate(view, transition, next) {\n    var component = view.childVM;\n    var hook = getRouteConfig(component, 'deactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHooks(hook, component, next);\n    }\n  }\n\n  /**\n   * Activate / switch component for a router-view.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Number} depth\n   * @param {Function} [cb]\n   */\n\n  function activate(view, transition, depth, cb, reuse) {\n    var handler = transition.activateQueue[depth];\n    if (!handler) {\n      saveChildView(view);\n      if (view._bound) {\n        view.setComponent(null);\n      }\n      cb && cb();\n      return;\n    }\n\n    var Component = view.Component = handler.component;\n    var activateHook = getRouteConfig(Component, 'activate');\n    var dataHook = getRouteConfig(Component, 'data');\n    var waitForData = getRouteConfig(Component, 'waitForData');\n\n    view.depth = depth;\n    view.activated = false;\n\n    var component = undefined;\n    var loading = !!(dataHook && !waitForData);\n\n    // \"reuse\" is a flag passed down when the parent view is\n    // either reused via keep-alive or as a child of a kept-alive view.\n    // of course we can only reuse if the current kept-alive instance\n    // is of the correct type.\n    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\n    if (reuse) {\n      // just reuse\n      component = view.childVM;\n      component.$loadingRouteData = loading;\n    } else {\n      saveChildView(view);\n\n      // unbuild current component. this step also destroys\n      // and removes all nested child views.\n      view.unbuild(true);\n\n      // build the new component. this will also create the\n      // direct child view of the current one. it will register\n      // itself as view.childView.\n      component = view.build({\n        _meta: {\n          $loadingRouteData: loading\n        },\n        created: function created() {\n          this._routerView = view;\n        }\n      });\n\n      // handle keep-alive.\n      // when a kept-alive child vm is restored, we need to\n      // add its cached child views into the router's view list,\n      // and also properly update current view's child view.\n      if (view.keepAlive) {\n        component.$loadingRouteData = loading;\n        var cachedChildView = component._keepAliveRouterView;\n        if (cachedChildView) {\n          view.childView = cachedChildView;\n          component._keepAliveRouterView = null;\n        }\n      }\n    }\n\n    // cleanup the component in case the transition is aborted\n    // before the component is ever inserted.\n    var cleanup = function cleanup() {\n      component.$destroy();\n    };\n\n    // actually insert the component and trigger transition\n    var insert = function insert() {\n      if (reuse) {\n        cb && cb();\n        return;\n      }\n      var router = transition.router;\n      if (router._rendered || router._transitionOnLoad) {\n        view.transition(component);\n      } else {\n        // no transition on first render, manual transition\n        /* istanbul ignore if */\n        if (view.setCurrent) {\n          // 0.12 compat\n          view.setCurrent(component);\n        } else {\n          // 1.0\n          view.childVM = component;\n        }\n        component.$before(view.anchor, null, false);\n      }\n      cb && cb();\n    };\n\n    var afterData = function afterData() {\n      // activate the child view\n      if (view.childView) {\n        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n      }\n      insert();\n    };\n\n    // called after activation hook is resolved\n    var afterActivate = function afterActivate() {\n      view.activated = true;\n      if (dataHook && waitForData) {\n        // wait until data loaded to insert\n        loadData(component, transition, dataHook, afterData, cleanup);\n      } else {\n        // load data and insert at the same time\n        if (dataHook) {\n          loadData(component, transition, dataHook);\n        }\n        afterData();\n      }\n    };\n\n    if (activateHook) {\n      transition.callHooks(activateHook, component, afterActivate, {\n        cleanup: cleanup,\n        postActivate: true\n      });\n    } else {\n      afterActivate();\n    }\n  }\n\n  /**\n   * Reuse a view, just reload data if necessary.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   */\n\n  function reuse(view, transition) {\n    var component = view.childVM;\n    var dataHook = getRouteConfig(component, 'data');\n    if (dataHook) {\n      loadData(component, transition, dataHook);\n    }\n  }\n\n  /**\n   * Asynchronously load and apply data to component.\n   *\n   * @param {Vue} component\n   * @param {Transition} transition\n   * @param {Function} hook\n   * @param {Function} cb\n   * @param {Function} cleanup\n   */\n\n  function loadData(component, transition, hook, cb, cleanup) {\n    component.$loadingRouteData = true;\n    transition.callHooks(hook, component, function () {\n      component.$loadingRouteData = false;\n      component.$emit('route-data-loaded', component);\n      cb && cb();\n    }, {\n      cleanup: cleanup,\n      postActivate: true,\n      processData: function processData(data) {\n        // handle promise sugar syntax\n        var promises = [];\n        if (isPlainObject(data)) {\n          Object.keys(data).forEach(function (key) {\n            var val = data[key];\n            if (isPromise(val)) {\n              promises.push(val.then(function (resolvedVal) {\n                component.$set(key, resolvedVal);\n              }));\n            } else {\n              component.$set(key, val);\n            }\n          });\n        }\n        if (promises.length) {\n          return promises[0].constructor.all(promises);\n        }\n      }\n    });\n  }\n\n  /**\n   * Save the child view for a kept-alive view so that\n   * we can restore it when it is switched back to.\n   *\n   * @param {Directive} view\n   */\n\n  function saveChildView(view) {\n    if (view.keepAlive && view.childVM && view.childView) {\n      view.childVM._keepAliveRouterView = view.childView;\n    }\n    view.childView = null;\n  }\n\n  /**\n   * Check plain object.\n   *\n   * @param {*} val\n   */\n\n  function isPlainObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  /**\n   * A RouteTransition object manages the pipeline of a\n   * router-view switching process. This is also the object\n   * passed into user route hooks.\n   *\n   * @param {Router} router\n   * @param {Route} to\n   * @param {Route} from\n   */\n\n  var RouteTransition = (function () {\n    function RouteTransition(router, to, from) {\n      babelHelpers.classCallCheck(this, RouteTransition);\n\n      this.router = router;\n      this.to = to;\n      this.from = from;\n      this.next = null;\n      this.aborted = false;\n      this.done = false;\n    }\n\n    /**\n     * Abort current transition and return to previous location.\n     */\n\n    RouteTransition.prototype.abort = function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n        // if the root path throws an error during validation\n        // on initial load, it gets caught in an infinite loop.\n        var abortingOnLoad = !this.from.path && this.to.path === '/';\n        if (!abortingOnLoad) {\n          this.router.replace(this.from.path || '/');\n        }\n      }\n    };\n\n    /**\n     * Abort current transition and redirect to a new location.\n     *\n     * @param {String} path\n     */\n\n    RouteTransition.prototype.redirect = function redirect(path) {\n      if (!this.aborted) {\n        this.aborted = true;\n        if (typeof path === 'string') {\n          path = mapParams(path, this.to.params, this.to.query);\n        } else {\n          path.params = path.params || this.to.params;\n          path.query = path.query || this.to.query;\n        }\n        this.router.replace(path);\n      }\n    };\n\n    /**\n     * A router view transition's pipeline can be described as\n     * follows, assuming we are transitioning from an existing\n     * <router-view> chain [Component A, Component B] to a new\n     * chain [Component A, Component C]:\n     *\n     *  A    A\n     *  | => |\n     *  B    C\n     *\n     * 1. Reusablity phase:\n     *   -> canReuse(A, A)\n     *   -> canReuse(B, C)\n     *   -> determine new queues:\n     *      - deactivation: [B]\n     *      - activation: [C]\n     *\n     * 2. Validation phase:\n     *   -> canDeactivate(B)\n     *   -> canActivate(C)\n     *\n     * 3. Activation phase:\n     *   -> deactivate(B)\n     *   -> activate(C)\n     *\n     * Each of these steps can be asynchronous, and any\n     * step can potentially abort the transition.\n     *\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.start = function start(cb) {\n      var transition = this;\n\n      // determine the queue of views to deactivate\n      var deactivateQueue = [];\n      var view = this.router._rootView;\n      while (view) {\n        deactivateQueue.unshift(view);\n        view = view.childView;\n      }\n      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\n      // determine the queue of route handlers to activate\n      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n        return match.handler;\n      });\n\n      // 1. Reusability phase\n      var i = undefined,\n          reuseQueue = undefined;\n      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n          break;\n        }\n      }\n      if (i > 0) {\n        reuseQueue = reverseDeactivateQueue.slice(0, i);\n        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n        activateQueue = activateQueue.slice(i);\n      }\n\n      // 2. Validation phase\n      transition.runQueue(deactivateQueue, canDeactivate, function () {\n        transition.runQueue(activateQueue, canActivate, function () {\n          transition.runQueue(deactivateQueue, deactivate, function () {\n            // 3. Activation phase\n\n            // Update router current route\n            transition.router._onTransitionValidated(transition);\n\n            // trigger reuse for all reused views\n            reuseQueue && reuseQueue.forEach(function (view) {\n              return reuse(view, transition);\n            });\n\n            // the root of the chain that needs to be replaced\n            // is the top-most non-reusable view.\n            if (deactivateQueue.length) {\n              var _view = deactivateQueue[deactivateQueue.length - 1];\n              var depth = reuseQueue ? reuseQueue.length : 0;\n              activate(_view, transition, depth, cb);\n            } else {\n              cb();\n            }\n          });\n        });\n      });\n    };\n\n    /**\n     * Asynchronously and sequentially apply a function to a\n     * queue.\n     *\n     * @param {Array} queue\n     * @param {Function} fn\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n      var transition = this;\n      step(0);\n      function step(index) {\n        if (index >= queue.length) {\n          cb();\n        } else {\n          fn(queue[index], transition, function () {\n            step(index + 1);\n          });\n        }\n      }\n    };\n\n    /**\n     * Call a user provided route transition hook and handle\n     * the response (e.g. if the user returns a promise).\n     *\n     * If the user neither expects an argument nor returns a\n     * promise, the hook is assumed to be synchronous.\n     *\n     * @param {Function} hook\n     * @param {*} [context]\n     * @param {Function} [cb]\n     * @param {Object} [options]\n     *                 - {Boolean} expectBoolean\n     *                 - {Boolean} postActive\n     *                 - {Function} processData\n     *                 - {Function} cleanup\n     */\n\n    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n      var _ref$expectBoolean = _ref.expectBoolean;\n      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n      var _ref$postActivate = _ref.postActivate;\n      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n      var processData = _ref.processData;\n      var cleanup = _ref.cleanup;\n\n      var transition = this;\n      var nextCalled = false;\n\n      // abort the transition\n      var abort = function abort() {\n        cleanup && cleanup();\n        transition.abort();\n      };\n\n      // handle errors\n      var onError = function onError(err) {\n        postActivate ? next() : abort();\n        if (err && !transition.router._suppress) {\n          warn$1('Uncaught error during transition: ');\n          throw err instanceof Error ? err : new Error(err);\n        }\n      };\n\n      // since promise swallows errors, we have to\n      // throw it in the next tick...\n      var onPromiseError = function onPromiseError(err) {\n        try {\n          onError(err);\n        } catch (e) {\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      };\n\n      // advance the transition to the next step\n      var next = function next() {\n        if (nextCalled) {\n          warn$1('transition.next() should be called only once.');\n          return;\n        }\n        nextCalled = true;\n        if (transition.aborted) {\n          cleanup && cleanup();\n          return;\n        }\n        cb && cb();\n      };\n\n      var nextWithBoolean = function nextWithBoolean(res) {\n        if (typeof res === 'boolean') {\n          res ? next() : abort();\n        } else if (isPromise(res)) {\n          res.then(function (ok) {\n            ok ? next() : abort();\n          }, onPromiseError);\n        } else if (!hook.length) {\n          next();\n        }\n      };\n\n      var nextWithData = function nextWithData(data) {\n        var res = undefined;\n        try {\n          res = processData(data);\n        } catch (err) {\n          return onError(err);\n        }\n        if (isPromise(res)) {\n          res.then(next, onPromiseError);\n        } else {\n          next();\n        }\n      };\n\n      // expose a clone of the transition object, so that each\n      // hook gets a clean copy and prevent the user from\n      // messing with the internals.\n      var exposed = {\n        to: transition.to,\n        from: transition.from,\n        abort: abort,\n        next: processData ? nextWithData : next,\n        redirect: function redirect() {\n          transition.redirect.apply(transition, arguments);\n        }\n      };\n\n      // actually call the hook\n      var res = undefined;\n      try {\n        res = hook.call(context, exposed);\n      } catch (err) {\n        return onError(err);\n      }\n\n      if (expectBoolean) {\n        // boolean hooks\n        nextWithBoolean(res);\n      } else if (isPromise(res)) {\n        // promise\n        if (processData) {\n          res.then(nextWithData, onPromiseError);\n        } else {\n          res.then(next, onPromiseError);\n        }\n      } else if (processData && isPlainOjbect(res)) {\n        // data promise sugar\n        nextWithData(res);\n      } else if (!hook.length) {\n        next();\n      }\n    };\n\n    /**\n     * Call a single hook or an array of async hooks in series.\n     *\n     * @param {Array} hooks\n     * @param {*} context\n     * @param {Function} cb\n     * @param {Object} [options]\n     */\n\n    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n      var _this = this;\n\n      if (Array.isArray(hooks)) {\n        this.runQueue(hooks, function (hook, _, next) {\n          if (!_this.aborted) {\n            _this.callHook(hook, context, next, options);\n          }\n        }, cb);\n      } else {\n        this.callHook(hooks, context, cb, options);\n      }\n    };\n\n    return RouteTransition;\n  })();\n\n  function isPlainOjbect(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function toArray(val) {\n    return val ? Array.prototype.slice.call(val) : [];\n  }\n\n  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\n  /**\n   * Route Context Object\n   *\n   * @param {String} path\n   * @param {Router} router\n   */\n\n  var Route = function Route(path, router) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, Route);\n\n    var matched = router._recognizer.recognize(path);\n    if (matched) {\n      // copy all custom fields from route configs\n      [].forEach.call(matched, function (match) {\n        for (var key in match.handler) {\n          if (!internalKeysRE.test(key)) {\n            _this[key] = match.handler[key];\n          }\n        }\n      });\n      // set query and params\n      this.query = matched.queryParams;\n      this.params = [].reduce.call(matched, function (prev, cur) {\n        if (cur.params) {\n          for (var key in cur.params) {\n            prev[key] = cur.params[key];\n          }\n        }\n        return prev;\n      }, {});\n    }\n    // expose path and router\n    this.path = path;\n    // for internal use\n    this.matched = matched || router._notFoundHandler;\n    // internal reference to router\n    Object.defineProperty(this, 'router', {\n      enumerable: false,\n      value: router\n    });\n    // Important: freeze self to prevent observation\n    Object.freeze(this);\n  };\n\n  function applyOverride (Vue) {\n    var _Vue$util = Vue.util;\n    var extend = _Vue$util.extend;\n    var isArray = _Vue$util.isArray;\n    var defineReactive = _Vue$util.defineReactive;\n\n    // override Vue's init and destroy process to keep track of router instances\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      options = options || {};\n      var root = options._parent || options.parent || this;\n      var router = root.$router;\n      var route = root.$route;\n      if (router) {\n        // expose router\n        this.$router = router;\n        router._children.push(this);\n        /* istanbul ignore if */\n        if (this._defineMeta) {\n          // 0.12\n          this._defineMeta('$route', route);\n        } else {\n          // 1.0\n          defineReactive(this, '$route', route);\n        }\n      }\n      init.call(this, options);\n    };\n\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      if (!this._isBeingDestroyed && this.$router) {\n        this.$router._children.$remove(this);\n      }\n      destroy.apply(this, arguments);\n    };\n\n    // 1.0 only: enable route mixins\n    var strats = Vue.config.optionMergeStrategies;\n    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\n    if (strats) {\n      strats.route = function (parentVal, childVal) {\n        if (!childVal) return parentVal;\n        if (!parentVal) return childVal;\n        var ret = {};\n        extend(ret, parentVal);\n        for (var key in childVal) {\n          var a = ret[key];\n          var b = childVal[key];\n          // for data, activate and deactivate, we need to merge them into\n          // arrays similar to lifecycle hooks.\n          if (a && hooksToMergeRE.test(key)) {\n            ret[key] = (isArray(a) ? a : [a]).concat(b);\n          } else {\n            ret[key] = b;\n          }\n        }\n        return ret;\n      };\n    }\n  }\n\n  function View (Vue) {\n\n    var _ = Vue.util;\n    var componentDef =\n    // 0.12\n    Vue.directive('_component') ||\n    // 1.0\n    Vue.internalDirectives.component;\n    // <router-view> extends the internal component directive\n    var viewDef = _.extend({}, componentDef);\n\n    // with some overrides\n    _.extend(viewDef, {\n\n      _isRouterView: true,\n\n      bind: function bind() {\n        var route = this.vm.$route;\n        /* istanbul ignore if */\n        if (!route) {\n          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n          return;\n        }\n        // force dynamic directive so v-component doesn't\n        // attempt to build right now\n        this._isDynamicLiteral = true;\n        // finally, init by delegating to v-component\n        componentDef.bind.call(this);\n\n        // locate the parent view\n        var parentView = undefined;\n        var parent = this.vm;\n        while (parent) {\n          if (parent._routerView) {\n            parentView = parent._routerView;\n            break;\n          }\n          parent = parent.$parent;\n        }\n        if (parentView) {\n          // register self as a child of the parent view,\n          // instead of activating now. This is so that the\n          // child's activate hook is called after the\n          // parent's has resolved.\n          this.parentView = parentView;\n          parentView.childView = this;\n        } else {\n          // this is the root view!\n          var router = route.router;\n          router._rootView = this;\n        }\n\n        // handle late-rendered view\n        // two possibilities:\n        // 1. root view rendered after transition has been\n        //    validated;\n        // 2. child view rendered after parent view has been\n        //    activated.\n        var transition = route.router._currentTransition;\n        if (!parentView && transition.done || parentView && parentView.activated) {\n          var depth = parentView ? parentView.depth + 1 : 0;\n          activate(this, transition, depth);\n        }\n      },\n\n      unbind: function unbind() {\n        if (this.parentView) {\n          this.parentView.childView = null;\n        }\n        componentDef.unbind.call(this);\n      }\n    });\n\n    Vue.elementDirective('router-view', viewDef);\n  }\n\n  var trailingSlashRE = /\\/$/;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var queryStringRE = /\\?.*$/;\n\n  // install v-link, which provides navigation support for\n  // HTML5 history mode\n  function Link (Vue) {\n    var _Vue$util = Vue.util;\n    var _bind = _Vue$util.bind;\n    var isObject = _Vue$util.isObject;\n    var addClass = _Vue$util.addClass;\n    var removeClass = _Vue$util.removeClass;\n\n    var onPriority = Vue.directive('on').priority;\n    var LINK_UPDATE = '__vue-router-link-update__';\n\n    var activeId = 0;\n\n    Vue.directive('link-active', {\n      priority: 9999,\n      bind: function bind() {\n        var _this = this;\n\n        var id = String(activeId++);\n        // collect v-links contained within this element.\n        // we need do this here before the parent-child relationship\n        // gets messed up by terminal directives (if, for, components)\n        var childLinks = this.el.querySelectorAll('[v-link]');\n        for (var i = 0, l = childLinks.length; i < l; i++) {\n          var link = childLinks[i];\n          var existingId = link.getAttribute(LINK_UPDATE);\n          var value = existingId ? existingId + ',' + id : id;\n          // leave a mark on the link element which can be persisted\n          // through fragment clones.\n          link.setAttribute(LINK_UPDATE, value);\n        }\n        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n          if (link.activeIds.indexOf(id) > -1) {\n            link.updateClasses(path, _this.el);\n          }\n        });\n      },\n      unbind: function unbind() {\n        this.vm.$off(LINK_UPDATE, this.cb);\n      }\n    });\n\n    Vue.directive('link', {\n      priority: onPriority - 2,\n\n      bind: function bind() {\n        var vm = this.vm;\n        /* istanbul ignore if */\n        if (!vm.$route) {\n          warn$1('v-link can only be used inside a router-enabled app.');\n          return;\n        }\n        this.router = vm.$route.router;\n        // update things when the route changes\n        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n        // check v-link-active ids\n        var activeIds = this.el.getAttribute(LINK_UPDATE);\n        if (activeIds) {\n          this.el.removeAttribute(LINK_UPDATE);\n          this.activeIds = activeIds.split(',');\n        }\n        // no need to handle click if link expects to be opened\n        // in a new window/tab.\n        /* istanbul ignore if */\n        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n          return;\n        }\n        // handle click\n        this.handler = _bind(this.onClick, this);\n        this.el.addEventListener('click', this.handler);\n      },\n\n      update: function update(target) {\n        this.target = target;\n        if (isObject(target)) {\n          this.append = target.append;\n          this.exact = target.exact;\n          this.prevActiveClass = this.activeClass;\n          this.activeClass = target.activeClass;\n        }\n        this.onRouteUpdate(this.vm.$route);\n      },\n\n      onClick: function onClick(e) {\n        // don't redirect with control keys\n        /* istanbul ignore if */\n        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n        // don't redirect when preventDefault called\n        /* istanbul ignore if */\n        if (e.defaultPrevented) return;\n        // don't redirect on right click\n        /* istanbul ignore if */\n        if (e.button !== 0) return;\n\n        var target = this.target;\n        if (target) {\n          // v-link with expression, just go\n          e.preventDefault();\n          this.router.go(target);\n        } else {\n          // no expression, delegate for an <a> inside\n          var el = e.target;\n          while (el.tagName !== 'A' && el !== this.el) {\n            el = el.parentNode;\n          }\n          if (el.tagName === 'A' && sameOrigin(el)) {\n            e.preventDefault();\n            var path = el.pathname;\n            if (this.router.history.root) {\n              path = path.replace(this.router.history.rootRE, '');\n            }\n            this.router.go({\n              path: path,\n              replace: target && target.replace,\n              append: target && target.append\n            });\n          }\n        }\n      },\n\n      onRouteUpdate: function onRouteUpdate(route) {\n        // router.stringifyPath is dependent on current route\n        // and needs to be called again whenver route changes.\n        var newPath = this.router.stringifyPath(this.target);\n        if (this.path !== newPath) {\n          this.path = newPath;\n          this.updateActiveMatch();\n          this.updateHref();\n        }\n        if (this.activeIds) {\n          this.vm.$emit(LINK_UPDATE, this, route.path);\n        } else {\n          this.updateClasses(route.path, this.el);\n        }\n      },\n\n      updateActiveMatch: function updateActiveMatch() {\n        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n      },\n\n      updateHref: function updateHref() {\n        if (this.el.tagName !== 'A') {\n          return;\n        }\n        var path = this.path;\n        var router = this.router;\n        var isAbsolute = path.charAt(0) === '/';\n        // do not format non-hash relative paths\n        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n        if (href) {\n          this.el.href = href;\n        } else {\n          this.el.removeAttribute('href');\n        }\n      },\n\n      updateClasses: function updateClasses(path, el) {\n        var activeClass = this.activeClass || this.router._linkActiveClass;\n        // clear old class\n        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n          toggleClasses(el, this.prevActiveClass, removeClass);\n        }\n        // remove query string before matching\n        var dest = this.path.replace(queryStringRE, '');\n        path = path.replace(queryStringRE, '');\n        // add new class\n        if (this.exact) {\n          if (dest === path ||\n          // also allow additional trailing slash\n          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        } else {\n          if (this.activeRE && this.activeRE.test(path)) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        }\n      },\n\n      unbind: function unbind() {\n        this.el.removeEventListener('click', this.handler);\n        this.unwatch && this.unwatch();\n      }\n    });\n\n    function sameOrigin(link) {\n      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n    }\n\n    // this function is copied from v-bind:class implementation until\n    // we properly expose it...\n    function toggleClasses(el, key, fn) {\n      key = key.trim();\n      if (key.indexOf(' ') === -1) {\n        fn(el, key);\n        return;\n      }\n      var keys = key.split(/\\s+/);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        fn(el, keys[i]);\n      }\n    }\n  }\n\n  var historyBackends = {\n    abstract: AbstractHistory,\n    hash: HashHistory,\n    html5: HTML5History\n  };\n\n  // late bind during install\n  var Vue = undefined;\n\n  /**\n   * Router constructor\n   *\n   * @param {Object} [options]\n   */\n\n  var Router = (function () {\n    function Router() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$hashbang = _ref.hashbang;\n      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n      var _ref$abstract = _ref.abstract;\n      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n      var _ref$history = _ref.history;\n      var history = _ref$history === undefined ? false : _ref$history;\n      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n      var _ref$root = _ref.root;\n      var root = _ref$root === undefined ? null : _ref$root;\n      var _ref$linkActiveClass = _ref.linkActiveClass;\n      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n      babelHelpers.classCallCheck(this, Router);\n\n      /* istanbul ignore if */\n      if (!Router.installed) {\n        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n      }\n\n      // Vue instances\n      this.app = null;\n      this._children = [];\n\n      // route recognizer\n      this._recognizer = new RouteRecognizer();\n      this._guardRecognizer = new RouteRecognizer();\n\n      // state\n      this._started = false;\n      this._startCb = null;\n      this._currentRoute = {};\n      this._currentTransition = null;\n      this._previousTransition = null;\n      this._notFoundHandler = null;\n      this._notFoundRedirect = null;\n      this._beforeEachHooks = [];\n      this._afterEachHooks = [];\n\n      // trigger transition on initial render?\n      this._rendered = false;\n      this._transitionOnLoad = transitionOnLoad;\n\n      // history mode\n      this._root = root;\n      this._abstract = abstract;\n      this._hashbang = hashbang;\n\n      // check if HTML5 history is available\n      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n      this._history = history && hasPushState;\n      this._historyFallback = history && !hasPushState;\n\n      // create history object\n      var inBrowser = Vue.util.inBrowser;\n      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\n      var History = historyBackends[this.mode];\n      this.history = new History({\n        root: root,\n        hashbang: this._hashbang,\n        onChange: function onChange(path, state, anchor) {\n          _this._match(path, state, anchor);\n        }\n      });\n\n      // other options\n      this._saveScrollPosition = saveScrollPosition;\n      this._linkActiveClass = linkActiveClass;\n      this._suppress = suppressTransitionError;\n    }\n\n    /**\n     * Allow directly passing components to a route\n     * definition.\n     *\n     * @param {String} path\n     * @param {Object} handler\n     */\n\n    // API ===================================================\n\n    /**\n    * Register a map of top-level paths.\n    *\n    * @param {Object} map\n    */\n\n    Router.prototype.map = function map(_map) {\n      for (var route in _map) {\n        this.on(route, _map[route]);\n      }\n      return this;\n    };\n\n    /**\n     * Register a single root-level path\n     *\n     * @param {String} rootPath\n     * @param {Object} handler\n     *                 - {String} component\n     *                 - {Object} [subRoutes]\n     *                 - {Boolean} [forceRefresh]\n     *                 - {Function} [before]\n     *                 - {Function} [after]\n     */\n\n    Router.prototype.on = function on(rootPath, handler) {\n      if (rootPath === '*') {\n        this._notFound(handler);\n      } else {\n        this._addRoute(rootPath, handler, []);\n      }\n      return this;\n    };\n\n    /**\n     * Set redirects.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.redirect = function redirect(map) {\n      for (var path in map) {\n        this._addRedirect(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set aliases.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.alias = function alias(map) {\n      for (var path in map) {\n        this._addAlias(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set global before hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.beforeEach = function beforeEach(fn) {\n      this._beforeEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Set global after hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.afterEach = function afterEach(fn) {\n      this._afterEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Navigate to a given path.\n     * The path can be an object describing a named path in\n     * the format of { name: '...', params: {}, query: {}}\n     * The path is assumed to be already decoded, and will\n     * be resolved against root (if provided)\n     *\n     * @param {String|Object} path\n     * @param {Boolean} [replace]\n     */\n\n    Router.prototype.go = function go(path) {\n      var replace = false;\n      var append = false;\n      if (Vue.util.isObject(path)) {\n        replace = path.replace;\n        append = path.append;\n      }\n      path = this.stringifyPath(path);\n      if (path) {\n        this.history.go(path, replace, append);\n      }\n    };\n\n    /**\n     * Short hand for replacing current path\n     *\n     * @param {String} path\n     */\n\n    Router.prototype.replace = function replace(path) {\n      if (typeof path === 'string') {\n        path = { path: path };\n      }\n      path.replace = true;\n      this.go(path);\n    };\n\n    /**\n     * Start the router.\n     *\n     * @param {VueConstructor} App\n     * @param {String|Element} container\n     * @param {Function} [cb]\n     */\n\n    Router.prototype.start = function start(App, container, cb) {\n      /* istanbul ignore if */\n      if (this._started) {\n        warn$1('already started.');\n        return;\n      }\n      this._started = true;\n      this._startCb = cb;\n      if (!this.app) {\n        /* istanbul ignore if */\n        if (!App || !container) {\n          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n        }\n        /* istanbul ignore if */\n        if (App instanceof Vue) {\n          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n        }\n        this._appContainer = container;\n        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n        // give it a name for better debugging\n        Ctor.options.name = Ctor.options.name || 'RouterApp';\n      }\n\n      // handle history fallback in browsers that do not\n      // support HTML5 history API\n      if (this._historyFallback) {\n        var _location = window.location;\n        var _history = new HTML5History({ root: this._root });\n        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n        if (path && path !== '/') {\n          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n          return;\n        }\n      }\n\n      this.history.start();\n    };\n\n    /**\n     * Stop listening to route changes.\n     */\n\n    Router.prototype.stop = function stop() {\n      this.history.stop();\n      this._started = false;\n    };\n\n    /**\n     * Normalize named route object / string paths into\n     * a string.\n     *\n     * @param {Object|String|Number} path\n     * @return {String}\n     */\n\n    Router.prototype.stringifyPath = function stringifyPath(path) {\n      var generatedPath = '';\n      if (path && typeof path === 'object') {\n        if (path.name) {\n          var extend = Vue.util.extend;\n          var currentParams = this._currentTransition && this._currentTransition.to.params;\n          var targetParams = path.params || {};\n          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n        } else if (path.path) {\n          generatedPath = encodeURI(path.path);\n        }\n        if (path.query) {\n          // note: the generated query string is pre-URL-encoded by the recognizer\n          var query = this._recognizer.generateQueryString(path.query);\n          if (generatedPath.indexOf('?') > -1) {\n            generatedPath += '&' + query.slice(1);\n          } else {\n            generatedPath += query;\n          }\n        }\n      } else {\n        generatedPath = encodeURI(path ? path + '' : '');\n      }\n      return generatedPath;\n    };\n\n    // Internal methods ======================================\n\n    /**\n    * Add a route containing a list of segments to the internal\n    * route recognizer. Will be called recursively to add all\n    * possible sub-routes.\n    *\n    * @param {String} path\n    * @param {Object} handler\n    * @param {Array} segments\n    */\n\n    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n      guardComponent(path, handler);\n      handler.path = path;\n      handler.fullPath = (segments.reduce(function (path, segment) {\n        return path + segment.path;\n      }, '') + path).replace('//', '/');\n      segments.push({\n        path: path,\n        handler: handler\n      });\n      this._recognizer.add(segments, {\n        as: handler.name\n      });\n      // add sub routes\n      if (handler.subRoutes) {\n        for (var subPath in handler.subRoutes) {\n          // recursively walk all sub routes\n          this._addRoute(subPath, handler.subRoutes[subPath],\n          // pass a copy in recursion to avoid mutating\n          // across branches\n          segments.slice());\n        }\n      }\n    };\n\n    /**\n     * Set the notFound route handler.\n     *\n     * @param {Object} handler\n     */\n\n    Router.prototype._notFound = function _notFound(handler) {\n      guardComponent('*', handler);\n      this._notFoundHandler = [{ handler: handler }];\n    };\n\n    /**\n     * Add a redirect record.\n     *\n     * @param {String} path\n     * @param {String} redirectPath\n     */\n\n    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n      if (path === '*') {\n        this._notFoundRedirect = redirectPath;\n      } else {\n        this._addGuard(path, redirectPath, this.replace);\n      }\n    };\n\n    /**\n     * Add an alias record.\n     *\n     * @param {String} path\n     * @param {String} aliasPath\n     */\n\n    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n      this._addGuard(path, aliasPath, this._match);\n    };\n\n    /**\n     * Add a path guard.\n     *\n     * @param {String} path\n     * @param {String} mappedPath\n     * @param {Function} handler\n     */\n\n    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n      var _this2 = this;\n\n      this._guardRecognizer.add([{\n        path: path,\n        handler: function handler(match, query) {\n          var realPath = mapParams(mappedPath, match.params, query);\n          _handler.call(_this2, realPath);\n        }\n      }]);\n    };\n\n    /**\n     * Check if a path matches any redirect records.\n     *\n     * @param {String} path\n     * @return {Boolean} - if true, will skip normal match.\n     */\n\n    Router.prototype._checkGuard = function _checkGuard(path) {\n      var matched = this._guardRecognizer.recognize(path, true);\n      if (matched) {\n        matched[0].handler(matched[0], matched.queryParams);\n        return true;\n      } else if (this._notFoundRedirect) {\n        matched = this._recognizer.recognize(path);\n        if (!matched) {\n          this.replace(this._notFoundRedirect);\n          return true;\n        }\n      }\n    };\n\n    /**\n     * Match a URL path and set the route context on vm,\n     * triggering view updates.\n     *\n     * @param {String} path\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._match = function _match(path, state, anchor) {\n      var _this3 = this;\n\n      if (this._checkGuard(path)) {\n        return;\n      }\n\n      var currentRoute = this._currentRoute;\n      var currentTransition = this._currentTransition;\n\n      if (currentTransition) {\n        if (currentTransition.to.path === path) {\n          // do nothing if we have an active transition going to the same path\n          return;\n        } else if (currentRoute.path === path) {\n          // We are going to the same path, but we also have an ongoing but\n          // not-yet-validated transition. Abort that transition and reset to\n          // prev transition.\n          currentTransition.aborted = true;\n          this._currentTransition = this._prevTransition;\n          return;\n        } else {\n          // going to a totally different path. abort ongoing transition.\n          currentTransition.aborted = true;\n        }\n      }\n\n      // construct new route and transition context\n      var route = new Route(path, this);\n      var transition = new RouteTransition(this, route, currentRoute);\n\n      // current transition is updated right now.\n      // however, current route will only be updated after the transition has\n      // been validated.\n      this._prevTransition = currentTransition;\n      this._currentTransition = transition;\n\n      if (!this.app) {\n        (function () {\n          // initial render\n          var router = _this3;\n          _this3.app = new _this3._appConstructor({\n            el: _this3._appContainer,\n            created: function created() {\n              this.$router = router;\n            },\n            _meta: {\n              $route: route\n            }\n          });\n        })();\n      }\n\n      // check global before hook\n      var beforeHooks = this._beforeEachHooks;\n      var startTransition = function startTransition() {\n        transition.start(function () {\n          _this3._postTransition(route, state, anchor);\n        });\n      };\n\n      if (beforeHooks.length) {\n        transition.runQueue(beforeHooks, function (hook, _, next) {\n          if (transition === _this3._currentTransition) {\n            transition.callHook(hook, null, next, {\n              expectBoolean: true\n            });\n          }\n        }, startTransition);\n      } else {\n        startTransition();\n      }\n\n      if (!this._rendered && this._startCb) {\n        this._startCb.call(null);\n      }\n\n      // HACK:\n      // set rendered to true after the transition start, so\n      // that components that are acitvated synchronously know\n      // whether it is the initial render.\n      this._rendered = true;\n    };\n\n    /**\n     * Set current to the new transition.\n     * This is called by the transition object when the\n     * validation of a route has succeeded.\n     *\n     * @param {Transition} transition\n     */\n\n    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n      // set current route\n      var route = this._currentRoute = transition.to;\n      // update route context for all children\n      if (this.app.$route !== route) {\n        this.app.$route = route;\n        this._children.forEach(function (child) {\n          child.$route = route;\n        });\n      }\n      // call global after hook\n      if (this._afterEachHooks.length) {\n        this._afterEachHooks.forEach(function (hook) {\n          return hook.call(null, {\n            to: transition.to,\n            from: transition.from\n          });\n        });\n      }\n      this._currentTransition.done = true;\n    };\n\n    /**\n     * Handle stuff after the transition.\n     *\n     * @param {Route} route\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n      // handle scroll positions\n      // saved scroll positions take priority\n      // then we check if the path has an anchor\n      var pos = state && state.pos;\n      if (pos && this._saveScrollPosition) {\n        Vue.nextTick(function () {\n          window.scrollTo(pos.x, pos.y);\n        });\n      } else if (anchor) {\n        Vue.nextTick(function () {\n          var el = document.getElementById(anchor.slice(1));\n          if (el) {\n            window.scrollTo(window.scrollX, el.offsetTop);\n          }\n        });\n      }\n    };\n\n    return Router;\n  })();\n\n  function guardComponent(path, handler) {\n    var comp = handler.component;\n    if (Vue.util.isPlainObject(comp)) {\n      comp = handler.component = Vue.extend(comp);\n    }\n    /* istanbul ignore if */\n    if (typeof comp !== 'function') {\n      handler.component = null;\n      warn$1('invalid component for route \"' + path + '\".');\n    }\n  }\n\n  /* Installation */\n\n  Router.installed = false;\n\n  /**\n   * Installation interface.\n   * Install the necessary directives.\n   */\n\n  Router.install = function (externalVue) {\n    /* istanbul ignore if */\n    if (Router.installed) {\n      warn$1('already installed.');\n      return;\n    }\n    Vue = externalVue;\n    applyOverride(Vue);\n    View(Vue);\n    Link(Vue);\n    exports$1.Vue = Vue;\n    Router.installed = true;\n  };\n\n  // auto install\n  /* istanbul ignore if */\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(Router);\n  }\n\n  return Router;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-router/dist/vue-router.js\n ** module id = 19\n ** module chunks = 1\n **/"],"sourceRoot":""}